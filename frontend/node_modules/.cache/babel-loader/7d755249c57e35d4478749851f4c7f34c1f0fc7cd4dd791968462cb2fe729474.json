{"ast":null,"code":"import axios from 'axios';\n\n// Define the response structure from our location search API\n\n/**\r\n * Search for locations based on a query string\r\n * @param query The search query (e.g., \"New York\", \"London\", \"Azor\")\r\n * @returns A promise resolving to an array of location search results\r\n */\nexport const searchLocations = async query => {\n  try {\n    const response = await axios.get('/api/locations/search', {\n      params: {\n        query\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error searching locations:', error);\n    throw new Error('Failed to search for locations');\n  }\n};","map":{"version":3,"names":["axios","searchLocations","query","response","get","params","data","error","console","Error"],"sources":["C:/Users/adara/Desktop/aaa/Tomorrow/frontend/src/services/locationService.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Define the response structure from our location search API\r\nexport interface LocationSearchResult {\r\n  id: string;\r\n  displayName: string;\r\n  name: string;\r\n  city: string;\r\n  state?: string;\r\n  country: string;\r\n  coordinates: {\r\n    lat: number;\r\n    lon: number;\r\n  };\r\n}\r\n\r\n/**\r\n * Search for locations based on a query string\r\n * @param query The search query (e.g., \"New York\", \"London\", \"Azor\")\r\n * @returns A promise resolving to an array of location search results\r\n */\r\nexport const searchLocations = async (query: string): Promise<LocationSearchResult[]> => {\r\n  try {\r\n    const response = await axios.get('/api/locations/search', {\r\n      params: { query }\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error searching locations:', error);\r\n    throw new Error('Failed to search for locations');\r\n  }\r\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;;AAcA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,eAAe,GAAG,MAAOC,KAAa,IAAsC;EACvF,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,uBAAuB,EAAE;MACxDC,MAAM,EAAE;QAAEH;MAAM;IAClB,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAM,IAAIE,KAAK,CAAC,gCAAgC,CAAC;EACnD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}