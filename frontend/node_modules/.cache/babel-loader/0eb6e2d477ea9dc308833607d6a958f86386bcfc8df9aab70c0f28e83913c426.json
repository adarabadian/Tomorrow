{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adara\\\\Desktop\\\\aaa\\\\Tomorrow\\\\frontend\\\\src\\\\pages\\\\Home.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Box, Typography, CircularProgress, useTheme } from '@mui/material';\nimport { fetchCurrentWeather } from '../services/weatherService';\nimport { WeatherSearch, WeatherDisplay, ErrorDisplay } from '../components/Weather';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const theme = useTheme();\n  const [weather, setWeather] = useState(null);\n  const [location, setLocation] = useState('');\n  const [searchLocation, setSearchLocation] = useState({\n    city: 'New York City'\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [animateCard, setAnimateCard] = useState(false);\n  useEffect(() => {\n    loadWeather(searchLocation);\n  }, [searchLocation]);\n  const loadWeather = async locationParam => {\n    setLoading(true);\n    setError(null);\n    try {\n      const data = await fetchCurrentWeather(locationParam);\n      setWeather(data);\n      setAnimateCard(true);\n\n      // Set the display location text\n      if ('city' in locationParam) {\n        setLocation(locationParam.city);\n      } else {\n        setLocation(`${locationParam.lat.toFixed(2)}, ${locationParam.lon.toFixed(2)}`);\n      }\n    } catch (err) {\n      setError('Failed to load weather data. Please check the location and try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleLocationSearch = locationParam => {\n    setSearchLocation(locationParam);\n  };\n  const getCurrentLocation = () => {\n    if (navigator.geolocation) {\n      setLoading(true);\n      navigator.geolocation.getCurrentPosition(position => {\n        setSearchLocation({\n          lat: position.coords.latitude,\n          lon: position.coords.longitude\n        });\n      }, error => {\n        setError('Unable to retrieve your location. Please enter it manually.');\n        setLoading(false);\n      });\n    } else {\n      setError('Geolocation is not supported by your browser. Please enter your location manually.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Weather Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeatherSearch, {\n      initialLocation: location,\n      onSearch: handleLocationSearch,\n      onGetCurrentLocation: getCurrentLocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"300px\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(ErrorDisplay, {\n      message: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this) : weather ? /*#__PURE__*/_jsxDEV(WeatherDisplay, {\n      weather: weather,\n      animate: animateCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"zfmnjY3TeMlxDGST13438V9VTfM=\", false, function () {\n  return [useTheme];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Box","Typography","CircularProgress","useTheme","fetchCurrentWeather","WeatherSearch","WeatherDisplay","ErrorDisplay","jsxDEV","_jsxDEV","Home","_s","theme","weather","setWeather","location","setLocation","searchLocation","setSearchLocation","city","loading","setLoading","error","setError","animateCard","setAnimateCard","loadWeather","locationParam","data","lat","toFixed","lon","err","handleLocationSearch","getCurrentLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","initialLocation","onSearch","onGetCurrentLocation","display","justifyContent","alignItems","minHeight","message","animate","_c","$RefreshReg$"],"sources":["C:/Users/adara/Desktop/aaa/Tomorrow/frontend/src/pages/Home.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  CircularProgress,\r\n  useTheme\r\n  \r\n} from '@mui/material';\r\nimport { WeatherData } from '../types/weather';\r\nimport { fetchCurrentWeather } from '../services/weatherService';\r\nimport {\r\n  WeatherSearch,\r\n  WeatherDisplay,\r\n  ErrorDisplay\r\n} from '../components/Weather';\r\n\r\nconst Home: React.FC = () => {\r\n  const theme = useTheme();\r\n\r\n  const [weather, setWeather] = useState<WeatherData | null>(null);\r\n  const [location, setLocation] = useState<string>('');\r\n  const [searchLocation, setSearchLocation] = useState<{ city: string } | { lat: number; lon: number }>({ city: 'New York City' });\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [animateCard, setAnimateCard] = useState(false);\r\n\r\n  useEffect(() => {\r\n    loadWeather(searchLocation);\r\n  }, [searchLocation]);\r\n\r\n  const loadWeather = async (locationParam: { city: string } | { lat: number; lon: number }) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const data = await fetchCurrentWeather(locationParam);\r\n      setWeather(data);\r\n      setAnimateCard(true);\r\n      \r\n      // Set the display location text\r\n      if ('city' in locationParam) {\r\n        setLocation(locationParam.city);\r\n      } else {\r\n        setLocation(`${locationParam.lat.toFixed(2)}, ${locationParam.lon.toFixed(2)}`);\r\n      }\r\n    } catch (err) {\r\n      setError('Failed to load weather data. Please check the location and try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleLocationSearch = (locationParam: { city: string } | { lat: number; lon: number }) => {\r\n    setSearchLocation(locationParam);\r\n  };\r\n\r\n  const getCurrentLocation = () => {\r\n    if (navigator.geolocation) {\r\n      setLoading(true);\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          setSearchLocation({ \r\n            lat: position.coords.latitude, \r\n            lon: position.coords.longitude \r\n          });\r\n        },\r\n        (error) => {\r\n          setError('Unable to retrieve your location. Please enter it manually.');\r\n          setLoading(false);\r\n        }\r\n      );\r\n    } else {\r\n      setError('Geolocation is not supported by your browser. Please enter your location manually.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Weather Dashboard\r\n      </Typography>\r\n\r\n      <WeatherSearch \r\n        initialLocation={location}\r\n        onSearch={handleLocationSearch}\r\n        onGetCurrentLocation={getCurrentLocation}\r\n      />\r\n\r\n      {loading ? (\r\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"300px\">\r\n          <CircularProgress />\r\n        </Box>\r\n      ) : error ? (\r\n        <ErrorDisplay message={error} />\r\n      ) : weather ? (\r\n        <WeatherDisplay weather={weather} animate={animateCard} />\r\n      ) : null}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Home; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SACEC,GAAG,EACHC,UAAU,EACVC,gBAAgB,EAChBC,QAAQ,QAEH,eAAe;AAEtB,SAASC,mBAAmB,QAAQ,4BAA4B;AAChE,SACEC,aAAa,EACbC,cAAc,EACdC,YAAY,QACP,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,IAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,KAAK,GAAGT,QAAQ,CAAC,CAAC;EAExB,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAqB,IAAI,CAAC;EAChE,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAS,EAAE,CAAC;EACpD,MAAM,CAACkB,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAkD;IAAEoB,IAAI,EAAE;EAAgB,CAAC,CAAC;EAChI,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAM,CAACyB,WAAW,EAAEC,cAAc,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EAErDD,SAAS,CAAC,MAAM;IACd4B,WAAW,CAACT,cAAc,CAAC;EAC7B,CAAC,EAAE,CAACA,cAAc,CAAC,CAAC;EAEpB,MAAMS,WAAW,GAAG,MAAOC,aAA8D,IAAK;IAC5FN,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMK,IAAI,GAAG,MAAMxB,mBAAmB,CAACuB,aAAa,CAAC;MACrDb,UAAU,CAACc,IAAI,CAAC;MAChBH,cAAc,CAAC,IAAI,CAAC;;MAEpB;MACA,IAAI,MAAM,IAAIE,aAAa,EAAE;QAC3BX,WAAW,CAACW,aAAa,CAACR,IAAI,CAAC;MACjC,CAAC,MAAM;QACLH,WAAW,CAAC,GAAGW,aAAa,CAACE,GAAG,CAACC,OAAO,CAAC,CAAC,CAAC,KAAKH,aAAa,CAACI,GAAG,CAACD,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;MACjF;IACF,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZT,QAAQ,CAAC,uEAAuE,CAAC;IACnF,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMY,oBAAoB,GAAIN,aAA8D,IAAK;IAC/FT,iBAAiB,CAACS,aAAa,CAAC;EAClC,CAAC;EAED,MAAMO,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAIC,SAAS,CAACC,WAAW,EAAE;MACzBf,UAAU,CAAC,IAAI,CAAC;MAChBc,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACrCC,QAAQ,IAAK;QACZpB,iBAAiB,CAAC;UAChBW,GAAG,EAAES,QAAQ,CAACC,MAAM,CAACC,QAAQ;UAC7BT,GAAG,EAAEO,QAAQ,CAACC,MAAM,CAACE;QACvB,CAAC,CAAC;MACJ,CAAC,EACAnB,KAAK,IAAK;QACTC,QAAQ,CAAC,6DAA6D,CAAC;QACvEF,UAAU,CAAC,KAAK,CAAC;MACnB,CACF,CAAC;IACH,CAAC,MAAM;MACLE,QAAQ,CAAC,oFAAoF,CAAC;IAChG;EACF,CAAC;EAED,oBACEd,OAAA,CAACT,GAAG;IAAA0C,QAAA,gBACFjC,OAAA,CAACR,UAAU;MAAC0C,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAEbvC,OAAA,CAACJ,aAAa;MACZ4C,eAAe,EAAElC,QAAS;MAC1BmC,QAAQ,EAAEjB,oBAAqB;MAC/BkB,oBAAoB,EAAEjB;IAAmB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,EAED5B,OAAO,gBACNX,OAAA,CAACT,GAAG;MAACoD,OAAO,EAAC,MAAM;MAACC,cAAc,EAAC,QAAQ;MAACC,UAAU,EAAC,QAAQ;MAACC,SAAS,EAAC,OAAO;MAAAb,QAAA,eAC/EjC,OAAA,CAACP,gBAAgB;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,GACJ1B,KAAK,gBACPb,OAAA,CAACF,YAAY;MAACiD,OAAO,EAAElC;IAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GAC9BnC,OAAO,gBACTJ,OAAA,CAACH,cAAc;MAACO,OAAO,EAAEA,OAAQ;MAAC4C,OAAO,EAAEjC;IAAY;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GACxD,IAAI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACrC,EAAA,CAlFID,IAAc;EAAA,QACJP,QAAQ;AAAA;AAAAuD,EAAA,GADlBhD,IAAc;AAoFpB,eAAeA,IAAI;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}