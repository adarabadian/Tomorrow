{"ast":null,"code":"import axios from 'axios';\nimport { mapBackendAlert } from '../types/alert';\nconst API_BASE_URL = 'http://localhost:3001/api';\nexport const getAlerts = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/alerts`);\n    return response.data.map(alert => mapBackendAlert(alert));\n  } catch (error) {\n    console.error('Error fetching alerts:', error);\n    throw new Error('Failed to fetch alerts');\n  }\n};\nexport const createAlert = async alert => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/alerts`, alert);\n    return mapBackendAlert(response.data);\n  } catch (error) {\n    console.error('Error creating alert:', error);\n    throw new Error('Failed to create alert');\n  }\n};\nexport const deleteAlert = async id => {\n  try {\n    await axios.delete(`${API_BASE_URL}/alerts/${id}`);\n  } catch (error) {\n    console.error('Error deleting alert:', error);\n    throw new Error('Failed to delete alert');\n  }\n};","map":{"version":3,"names":["axios","mapBackendAlert","API_BASE_URL","getAlerts","response","get","data","map","alert","error","console","Error","createAlert","post","deleteAlert","id","delete"],"sources":["C:/Users/adara/Desktop/aaa/Tomorrow/frontend/src/services/alertService.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { Alert, mapBackendAlert } from '../types/alert';\r\n\r\nconst API_BASE_URL = 'http://localhost:3001/api';\r\n\r\nexport const getAlerts = async (): Promise<Alert[]> => {\r\n  try {\r\n    const response = await axios.get(`${API_BASE_URL}/alerts`);\r\n    return response.data.map((alert: any) => mapBackendAlert(alert));\r\n  } catch (error) {\r\n    console.error('Error fetching alerts:', error);\r\n    throw new Error('Failed to fetch alerts');\r\n  }\r\n};\r\n\r\nexport const createAlert = async (alert: Omit<Alert, 'id' | '_id' | 'isTriggered' | 'lastChecked' | 'status'>): Promise<Alert> => {\r\n  try {\r\n    const response = await axios.post(`${API_BASE_URL}/alerts`, alert);\r\n    return mapBackendAlert(response.data);\r\n  } catch (error) {\r\n    console.error('Error creating alert:', error);\r\n    throw new Error('Failed to create alert');\r\n  }\r\n};\r\n\r\nexport const deleteAlert = async (id: string): Promise<void> => {\r\n  try {\r\n    await axios.delete(`${API_BASE_URL}/alerts/${id}`);\r\n  } catch (error) {\r\n    console.error('Error deleting alert:', error);\r\n    throw new Error('Failed to delete alert');\r\n  }\r\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAgBC,eAAe,QAAQ,gBAAgB;AAEvD,MAAMC,YAAY,GAAG,2BAA2B;AAEhD,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAA8B;EACrD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGH,YAAY,SAAS,CAAC;IAC1D,OAAOE,QAAQ,CAACE,IAAI,CAACC,GAAG,CAAEC,KAAU,IAAKP,eAAe,CAACO,KAAK,CAAC,CAAC;EAClE,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAM,IAAIE,KAAK,CAAC,wBAAwB,CAAC;EAC3C;AACF,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,MAAOJ,KAA2E,IAAqB;EAChI,IAAI;IACF,MAAMJ,QAAQ,GAAG,MAAMJ,KAAK,CAACa,IAAI,CAAC,GAAGX,YAAY,SAAS,EAAEM,KAAK,CAAC;IAClE,OAAOP,eAAe,CAACG,QAAQ,CAACE,IAAI,CAAC;EACvC,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAM,IAAIE,KAAK,CAAC,wBAAwB,CAAC;EAC3C;AACF,CAAC;AAED,OAAO,MAAMG,WAAW,GAAG,MAAOC,EAAU,IAAoB;EAC9D,IAAI;IACF,MAAMf,KAAK,CAACgB,MAAM,CAAC,GAAGd,YAAY,WAAWa,EAAE,EAAE,CAAC;EACpD,CAAC,CAAC,OAAON,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAM,IAAIE,KAAK,CAAC,wBAAwB,CAAC;EAC3C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}