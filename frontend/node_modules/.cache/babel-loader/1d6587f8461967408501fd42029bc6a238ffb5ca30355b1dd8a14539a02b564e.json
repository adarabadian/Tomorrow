{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adara\\\\Desktop\\\\aaa\\\\Tomorrow\\\\frontend\\\\src\\\\components\\\\Navigation\\\\Sidebar.tsx\";\nimport React from 'react';\nimport { Drawer, Box, List, ListItem, ListItemIcon, ListItemText, Divider, Typography } from '@mui/material';\nimport { Link as RouterLink } from 'react-router-dom';\nimport CloudIcon from '@mui/icons-material/Cloud';\nimport HomeIcon from '@mui/icons-material/Home';\nimport NotificationsIcon from '@mui/icons-material/Notifications';\nimport WarningIcon from '@mui/icons-material/Warning';\n\n// Map icon strings to actual components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst iconMap = {\n  'HomeIcon': HomeIcon,\n  'NotificationsIcon': NotificationsIcon,\n  'WarningIcon': WarningIcon\n};\nconst Sidebar = ({\n  open,\n  onClose,\n  navItems,\n  isActive\n}) => {\n  // Drawer content\n  const drawerContent = /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: 250\n    },\n    role: \"presentation\",\n    onClick: onClose,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        p: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(CloudIcon, {\n        sx: {\n          mr: 1,\n          color: 'primary.main'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        fontWeight: \"bold\",\n        children: \"Weather Alerts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: navItems.map(item => {\n        const IconComponent = iconMap[item.icon];\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          component: RouterLink,\n          to: item.path,\n          selected: isActive(item.path),\n          sx: {\n            '&.Mui-selected': {\n              backgroundColor: 'rgba(25, 118, 210, 0.08)',\n              color: 'primary.main',\n              '& .MuiListItemIcon-root': {\n                color: 'primary.main'\n              }\n            },\n            '&:hover': {\n              backgroundColor: 'rgba(25, 118, 210, 0.04)'\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: /*#__PURE__*/_jsxDEV(IconComponent, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, item.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Drawer, {\n    anchor: \"left\",\n    open: open,\n    onClose: onClose,\n    children: drawerContent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","Drawer","Box","List","ListItem","ListItemIcon","ListItemText","Divider","Typography","Link","RouterLink","CloudIcon","HomeIcon","NotificationsIcon","WarningIcon","jsxDEV","_jsxDEV","iconMap","Sidebar","open","onClose","navItems","isActive","drawerContent","sx","width","role","onClick","children","display","alignItems","p","mr","color","fileName","_jsxFileName","lineNumber","columnNumber","variant","fontWeight","map","item","IconComponent","icon","button","component","to","path","selected","backgroundColor","primary","name","anchor","_c","$RefreshReg$"],"sources":["C:/Users/adara/Desktop/aaa/Tomorrow/frontend/src/components/Navigation/Sidebar.tsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Drawer,\r\n  Box,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Divider,\r\n  Typography\r\n} from '@mui/material';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport CloudIcon from '@mui/icons-material/Cloud';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications'; \r\nimport WarningIcon from '@mui/icons-material/Warning';\r\n\r\n// Map icon strings to actual components\r\nconst iconMap = {\r\n  'HomeIcon': HomeIcon,\r\n  'NotificationsIcon': NotificationsIcon,\r\n  'WarningIcon': WarningIcon\r\n};\r\n\r\ninterface SidebarProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  navItems: Array<{\r\n    name: string;\r\n    path: string;\r\n    icon: string;\r\n  }>;\r\n  isActive: (path: string) => boolean;\r\n}\r\n\r\nconst Sidebar: React.FC<SidebarProps> = ({ open, onClose, navItems, isActive }) => {\r\n  // Drawer content\r\n  const drawerContent = (\r\n    <Box\r\n      sx={{ width: 250 }}\r\n      role=\"presentation\"\r\n      onClick={onClose}\r\n    >\r\n      <Box sx={{ display: 'flex', alignItems: 'center', p: 2 }}>\r\n        <CloudIcon sx={{ mr: 1, color: 'primary.main' }} />\r\n        <Typography variant=\"h6\" fontWeight=\"bold\">\r\n          Weather Alerts\r\n        </Typography>\r\n      </Box>\r\n      <Divider />\r\n      <List>\r\n        {navItems.map((item) => {\r\n          const IconComponent = iconMap[item.icon as keyof typeof iconMap];\r\n          \r\n          return (\r\n            <ListItem \r\n              button \r\n              key={item.name} \r\n              component={RouterLink} \r\n              to={item.path}\r\n              selected={isActive(item.path)}\r\n              sx={{ \r\n                '&.Mui-selected': {\r\n                  backgroundColor: 'rgba(25, 118, 210, 0.08)',\r\n                  color: 'primary.main',\r\n                  '& .MuiListItemIcon-root': {\r\n                    color: 'primary.main'\r\n                  }\r\n                },\r\n                '&:hover': {\r\n                  backgroundColor: 'rgba(25, 118, 210, 0.04)',\r\n                },\r\n              }}\r\n            >\r\n              <ListItemIcon>\r\n                <IconComponent />\r\n              </ListItemIcon>\r\n              <ListItemText primary={item.name} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <Drawer\r\n      anchor=\"left\"\r\n      open={open}\r\n      onClose={onClose}\r\n    >\r\n      {drawerContent}\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default Sidebar; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}