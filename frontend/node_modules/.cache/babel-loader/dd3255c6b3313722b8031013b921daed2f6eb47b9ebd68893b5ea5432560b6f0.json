{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:3001/api';\nexport const fetchCurrentWeather = async location => {\n  try {\n    const params = 'lat' in location ? {\n      lat: location.lat,\n      lon: location.lon\n    } : {\n      city: location.city\n    };\n    const response = await axios.get(`${API_BASE_URL}/weather/current`, {\n      params\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to fetch weather data');\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","fetchCurrentWeather","location","params","lat","lon","city","response","get","data","error","Error"],"sources":["C:/Users/adara/Desktop/aaa/Tomorrow/frontend/src/services/weatherService.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { WeatherData } from '../types/weather';\r\n\r\nconst API_BASE_URL = 'http://localhost:3001/api';\r\n\r\nexport const fetchCurrentWeather = async (location: { lat: number; lon: number } | { city: string }): Promise<WeatherData> => {\r\n  try {\r\n    const params = 'lat' in location\r\n      ? { lat: location.lat, lon: location.lon }\r\n      : { city: location.city };\r\n\r\n    const response = await axios.get(`${API_BASE_URL}/weather/current`, { params });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Failed to fetch weather data');\r\n  }\r\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,YAAY,GAAG,2BAA2B;AAEhD,OAAO,MAAMC,mBAAmB,GAAG,MAAOC,QAAyD,IAA2B;EAC5H,IAAI;IACF,MAAMC,MAAM,GAAG,KAAK,IAAID,QAAQ,GAC5B;MAAEE,GAAG,EAAEF,QAAQ,CAACE,GAAG;MAAEC,GAAG,EAAEH,QAAQ,CAACG;IAAI,CAAC,GACxC;MAAEC,IAAI,EAAEJ,QAAQ,CAACI;IAAK,CAAC;IAE3B,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,GAAGR,YAAY,kBAAkB,EAAE;MAAEG;IAAO,CAAC,CAAC;IAC/E,OAAOI,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;EACjD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}