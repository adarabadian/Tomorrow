{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adara\\\\Desktop\\\\aaa\\\\Tomorrow\\\\frontend\\\\src\\\\pages\\\\CurrentState.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Fade, Typography } from '@mui/material';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport WarningIcon from '@mui/icons-material/Warning';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport { getAlerts } from '../services/alertService';\nimport PageHeader from '../components/PageHeader/PageHeader';\nimport LoadingState from '../components/LoadingState/LoadingState';\nimport AlertStatusOverview from '../components/AlertStatusOverview/AlertStatusOverview';\nimport AlertStatusList from '../components/AlertList/AlertStatusList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CurrentState = () => {\n  _s();\n  const [alerts, setAlerts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [lastUpdated, setLastUpdated] = useState(new Date());\n  const [fadeIn, setFadeIn] = useState(false);\n  useEffect(() => {\n    loadAlerts();\n\n    // Refresh data every 30 seconds\n    const interval = setInterval(loadAlerts, 30000);\n    return () => clearInterval(interval);\n  }, []);\n  const loadAlerts = async () => {\n    setLoading(true);\n    setError(null);\n    setFadeIn(false);\n    try {\n      const data = await getAlerts();\n      setAlerts(data);\n      setLastUpdated(new Date());\n      setTimeout(() => setFadeIn(true), 100);\n    } catch (err) {\n      setError('Failed to load alerts. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Filter alerts by status\n  const triggeredAlerts = alerts.filter(alert => alert.isTriggered);\n  const normalAlerts = alerts.filter(alert => !alert.isTriggered);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      title: \"Alert Status\",\n      action: {\n        label: \"Refresh\",\n        onClick: loadAlerts,\n        icon: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this),\n        loading: loading,\n        disabled: loading\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoadingState, {\n      loading: loading && alerts.length === 0,\n      error: error,\n      isEmpty: alerts.length === 0 && !loading && !error,\n      emptyMessage: \"No alerts have been created yet\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(AlertStatusOverview, {\n          alerts: alerts,\n          lastUpdated: lastUpdated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Fade, {\n        in: fadeIn,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(AlertStatusList, {\n            alerts: triggeredAlerts,\n            title: \"Active Alerts\",\n            icon: /*#__PURE__*/_jsxDEV(WarningIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 21\n            }, this),\n            borderColor: \"#f44336\",\n            backgroundColor: \"rgba(244, 67, 54, 0.05)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AlertStatusList, {\n            alerts: normalAlerts,\n            title: \"Normal Alerts\",\n            icon: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 21\n            }, this),\n            borderColor: \"#4caf50\",\n            backgroundColor: \"rgba(76, 175, 80, 0.05)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), alerts.length > 0 && triggeredAlerts.length === 0 && normalAlerts.length === 0 && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              textAlign: 'center',\n              py: 4\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              color: \"text.secondary\",\n              children: \"No alerts are currently being monitored\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(CurrentState, \"AU2FpwYvtNKrygMwyaESGty0p8g=\");\n_c = CurrentState;\nexport default CurrentState;\nvar _c;\n$RefreshReg$(_c, \"CurrentState\");","map":{"version":3,"names":["React","useState","useEffect","Box","Fade","Typography","RefreshIcon","WarningIcon","CheckCircleIcon","getAlerts","PageHeader","LoadingState","AlertStatusOverview","AlertStatusList","jsxDEV","_jsxDEV","CurrentState","_s","alerts","setAlerts","loading","setLoading","error","setError","lastUpdated","setLastUpdated","Date","fadeIn","setFadeIn","loadAlerts","interval","setInterval","clearInterval","data","setTimeout","err","triggeredAlerts","filter","alert","isTriggered","normalAlerts","children","title","action","label","onClick","icon","fileName","_jsxFileName","lineNumber","columnNumber","disabled","length","isEmpty","emptyMessage","sx","mb","in","borderColor","backgroundColor","textAlign","py","variant","color","_c","$RefreshReg$"],"sources":["C:/Users/adara/Desktop/aaa/Tomorrow/frontend/src/pages/CurrentState.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, Fade, Typography } from '@mui/material';\r\nimport RefreshIcon from '@mui/icons-material/Refresh';\r\nimport WarningIcon from '@mui/icons-material/Warning';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport { Alert } from '../types/alert';\r\nimport { getAlerts } from '../services/alertService';\r\nimport PageHeader from '../components/PageHeader/PageHeader';\r\nimport LoadingState from '../components/LoadingState/LoadingState';\r\nimport AlertStatusOverview from '../components/AlertStatusOverview/AlertStatusOverview';\r\nimport AlertStatusList from '../components/AlertList/AlertStatusList';\r\n\r\nconst CurrentState: React.FC = () => {\r\n  const [alerts, setAlerts] = useState<Alert[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [lastUpdated, setLastUpdated] = useState<Date>(new Date());\r\n  const [fadeIn, setFadeIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    loadAlerts();\r\n    \r\n    // Refresh data every 30 seconds\r\n    const interval = setInterval(loadAlerts, 30000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const loadAlerts = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    setFadeIn(false);\r\n    \r\n    try {\r\n      const data = await getAlerts();\r\n      setAlerts(data);\r\n      setLastUpdated(new Date());\r\n      setTimeout(() => setFadeIn(true), 100);\r\n    } catch (err) {\r\n      setError('Failed to load alerts. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Filter alerts by status\r\n  const triggeredAlerts = alerts.filter(alert => alert.isTriggered);\r\n  const normalAlerts = alerts.filter(alert => !alert.isTriggered);\r\n\r\n  return (\r\n    <Box>\r\n      <PageHeader \r\n        title=\"Alert Status\"\r\n        action={{\r\n          label: \"Refresh\",\r\n          onClick: loadAlerts,\r\n          icon: <RefreshIcon />,\r\n          loading: loading,\r\n          disabled: loading\r\n        }}\r\n      />\r\n\r\n      <LoadingState \r\n        loading={loading && alerts.length === 0} \r\n        error={error}\r\n        isEmpty={alerts.length === 0 && !loading && !error}\r\n        emptyMessage=\"No alerts have been created yet\"\r\n      >\r\n        <Box sx={{ mb: 4 }}>\r\n          <AlertStatusOverview \r\n            alerts={alerts} \r\n            lastUpdated={lastUpdated} \r\n          />\r\n        </Box>\r\n\r\n        <Fade in={fadeIn}>\r\n          <Box>\r\n            <AlertStatusList\r\n              alerts={triggeredAlerts}\r\n              title=\"Active Alerts\"\r\n              icon={<WarningIcon />}\r\n              borderColor=\"#f44336\"\r\n              backgroundColor=\"rgba(244, 67, 54, 0.05)\"\r\n            />\r\n\r\n            <AlertStatusList\r\n              alerts={normalAlerts}\r\n              title=\"Normal Alerts\"\r\n              icon={<CheckCircleIcon />}\r\n              borderColor=\"#4caf50\"\r\n              backgroundColor=\"rgba(76, 175, 80, 0.05)\"\r\n            />\r\n\r\n            {alerts.length > 0 && triggeredAlerts.length === 0 && normalAlerts.length === 0 && (\r\n              <Box sx={{ textAlign: 'center', py: 4 }}>\r\n                <Typography variant=\"h6\" color=\"text.secondary\">\r\n                  No alerts are currently being monitored\r\n                </Typography>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </Fade>\r\n      </LoadingState>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CurrentState; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}