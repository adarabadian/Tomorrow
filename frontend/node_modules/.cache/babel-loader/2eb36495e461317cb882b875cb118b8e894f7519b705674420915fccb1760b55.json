{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adara\\\\Desktop\\\\aaa\\\\Tomorrow\\\\frontend\\\\src\\\\pages\\\\Alerts.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography } from '@mui/material';\nimport { getAlerts, createAlert, deleteAlert } from '../services/alertService';\nimport { mapBackendAlert } from '../types/alert';\n\n// Import our new components\nimport AlertForm from '../components/AlertForm/AlertForm';\nimport AlertList from '../components/AlertList/AlertList';\nimport DeleteAlertDialog from '../components/DeleteAlertDialog/DeleteAlertDialog';\nimport Notifications from '../components/common/Notifications';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Alerts = () => {\n  _s();\n  // State for alerts list\n  const [alerts, setAlerts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [fetchError, setFetchError] = useState(null);\n\n  // State for UI feedback\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [deleteConfirmOpen, setDeleteConfirmOpen] = useState(false);\n  const [alertToDelete, setAlertToDelete] = useState(null);\n\n  // Fetch alerts on component mount\n  useEffect(() => {\n    loadAlerts();\n  }, []);\n\n  // Load alerts from API\n  const loadAlerts = async () => {\n    setLoading(true);\n    setFetchError(null);\n    try {\n      const data = await getAlerts();\n      // Map backend alerts to our frontend model\n      const mappedAlerts = data.map(mapBackendAlert);\n      setAlerts(mappedAlerts);\n    } catch (err) {\n      setFetchError('Failed to load alerts');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle alert creation\n  const handleCreateAlert = async alertData => {\n    try {\n      await createAlert(alertData);\n      setSuccessMessage('Alert created successfully!');\n      loadAlerts();\n      return Promise.resolve();\n    } catch (err) {\n      // Extract the error message from the Error object\n      const errorMessage = err.message || 'Failed to create alert';\n      setErrorMessage(errorMessage);\n      return Promise.reject(err);\n    }\n  };\n\n  // Delete an alert - returns a Promise for the AlertList component\n  const handleDeleteAlert = async id => {\n    setAlertToDelete(id);\n    setDeleteConfirmOpen(true);\n\n    // Create a promise that will be resolved when the alert is deleted\n    return new Promise((resolve, reject) => {\n      // This will be handled by the confirmation dialog\n      // The actual deletion happens in the handleDelete function\n    });\n  };\n\n  // Delete an alert after confirmation\n  const handleDelete = async () => {\n    if (!alertToDelete) return;\n    try {\n      await deleteAlert(alertToDelete);\n      setSuccessMessage('Alert deleted successfully!');\n      await loadAlerts();\n      setAlertToDelete(null);\n      setDeleteConfirmOpen(false);\n    } catch (err) {\n      setErrorMessage('Failed to delete alert');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Weather Alerts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AlertForm, {\n      onSubmit: handleCreateAlert,\n      onSuccess: () => {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AlertList, {\n      alerts: alerts,\n      loading: loading,\n      error: fetchError,\n      onDelete: handleDeleteAlert,\n      onRefresh: loadAlerts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeleteAlertDialog, {\n      open: deleteConfirmOpen,\n      onClose: () => setDeleteConfirmOpen(false),\n      onConfirm: handleDelete,\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notifications, {\n      successMessage: successMessage,\n      errorMessage: errorMessage,\n      onClearSuccess: () => setSuccessMessage(null),\n      onClearError: () => setErrorMessage(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(Alerts, \"564LaR8uU921MWkIk+lUzIzmBDs=\");\n_c = Alerts;\nexport default Alerts;\nvar _c;\n$RefreshReg$(_c, \"Alerts\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","getAlerts","createAlert","deleteAlert","mapBackendAlert","AlertForm","AlertList","DeleteAlertDialog","Notifications","jsxDEV","_jsxDEV","Alerts","_s","alerts","setAlerts","loading","setLoading","fetchError","setFetchError","successMessage","setSuccessMessage","errorMessage","setErrorMessage","deleteConfirmOpen","setDeleteConfirmOpen","alertToDelete","setAlertToDelete","loadAlerts","data","mappedAlerts","map","err","handleCreateAlert","alertData","Promise","resolve","message","reject","handleDeleteAlert","id","handleDelete","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onSuccess","error","onDelete","onRefresh","open","onClose","onConfirm","onClearSuccess","onClearError","_c","$RefreshReg$"],"sources":["C:/Users/adara/Desktop/aaa/Tomorrow/frontend/src/pages/Alerts.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, Typography } from '@mui/material';\r\nimport { getAlerts, createAlert, deleteAlert } from '../services/alertService';\r\nimport { Alert, mapBackendAlert } from '../types/alert';\r\n\r\n// Import our new components\r\nimport AlertForm from '../components/AlertForm/AlertForm';\r\nimport AlertList from '../components/AlertList/AlertList';\r\nimport DeleteAlertDialog from '../components/DeleteAlertDialog/DeleteAlertDialog';\r\nimport Notifications from '../components/common/Notifications';\r\n\r\nconst Alerts: React.FC = () => {\r\n  // State for alerts list\r\n  const [alerts, setAlerts] = useState<Alert[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [fetchError, setFetchError] = useState<string | null>(null);\r\n  \r\n  // State for UI feedback\r\n  const [successMessage, setSuccessMessage] = useState<string | null>(null);\r\n  const [errorMessage, setErrorMessage] = useState<string | null>(null);\r\n  const [deleteConfirmOpen, setDeleteConfirmOpen] = useState(false);\r\n  const [alertToDelete, setAlertToDelete] = useState<string | null>(null);\r\n\r\n  // Fetch alerts on component mount\r\n  useEffect(() => {\r\n    loadAlerts();\r\n  }, []);\r\n\r\n  // Load alerts from API\r\n  const loadAlerts = async () => {\r\n    setLoading(true);\r\n    setFetchError(null);\r\n    try {\r\n      const data = await getAlerts();\r\n      // Map backend alerts to our frontend model\r\n      const mappedAlerts = data.map(mapBackendAlert);\r\n      setAlerts(mappedAlerts);\r\n    } catch (err) {\r\n      setFetchError('Failed to load alerts');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle alert creation\r\n  const handleCreateAlert = async (alertData: any) => {\r\n    try {\r\n      await createAlert(alertData);\r\n      setSuccessMessage('Alert created successfully!');\r\n      loadAlerts();\r\n      return Promise.resolve();\r\n    } catch (err: any) {\r\n      // Extract the error message from the Error object\r\n      const errorMessage = err.message || 'Failed to create alert';\r\n      setErrorMessage(errorMessage);\r\n      return Promise.reject(err);\r\n    }\r\n  };\r\n\r\n  // Delete an alert - returns a Promise for the AlertList component\r\n  const handleDeleteAlert = async (id: string): Promise<void> => {\r\n    setAlertToDelete(id);\r\n    setDeleteConfirmOpen(true);\r\n    \r\n    // Create a promise that will be resolved when the alert is deleted\r\n    return new Promise((resolve, reject) => {\r\n      // This will be handled by the confirmation dialog\r\n      // The actual deletion happens in the handleDelete function\r\n    });\r\n  };\r\n\r\n  // Delete an alert after confirmation\r\n  const handleDelete = async () => {\r\n    if (!alertToDelete) return;\r\n    \r\n    try {\r\n      await deleteAlert(alertToDelete);\r\n      setSuccessMessage('Alert deleted successfully!');\r\n      await loadAlerts();\r\n      setAlertToDelete(null);\r\n      setDeleteConfirmOpen(false);\r\n    } catch (err) {\r\n      setErrorMessage('Failed to delete alert');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Weather Alerts\r\n      </Typography>\r\n      \r\n      {/* Alert Creation Form */}\r\n      <AlertForm \r\n        onSubmit={handleCreateAlert}\r\n        onSuccess={() => {}}\r\n      />\r\n      \r\n      {/* Alert List */}\r\n      <AlertList \r\n        alerts={alerts}\r\n        loading={loading}\r\n        error={fetchError}\r\n        onDelete={handleDeleteAlert}\r\n        onRefresh={loadAlerts}\r\n      />\r\n      \r\n      {/* Delete Confirmation Dialog */}\r\n      <DeleteAlertDialog \r\n        open={deleteConfirmOpen}\r\n        onClose={() => setDeleteConfirmOpen(false)}\r\n        onConfirm={handleDelete}\r\n        loading={loading}\r\n      />\r\n      \r\n      {/* Notifications */}\r\n      <Notifications \r\n        successMessage={successMessage}\r\n        errorMessage={errorMessage}\r\n        onClearSuccess={() => setSuccessMessage(null)}\r\n        onClearError={() => setErrorMessage(null)}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Alerts; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}