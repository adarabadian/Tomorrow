{"ast":null,"code":"import { mapBackendAlert } from '../types/alert';\nimport api from './apiClient';\n\n/**\r\n * Get all alerts\r\n */\nexport const getAlerts = async () => {\n  try {\n    const data = await api.get('/alerts');\n    return data.map(alert => mapBackendAlert(alert));\n  } catch (error) {\n    console.error('Error fetching alerts:', error);\n    throw new Error('Failed to fetch alerts');\n  }\n};\n\n/**\r\n * Create a new alert\r\n */\nexport const createAlert = async alert => {\n  try {\n    const data = await api.post('/alerts', alert);\n    return mapBackendAlert(data);\n  } catch (error) {\n    console.error('Error creating alert:', error);\n    throw error; // Error handling already done in the apiClient\n  }\n};\n\n/**\r\n * Delete an alert by ID\r\n */\nexport const deleteAlert = async id => {\n  try {\n    await api.delete(`/alerts/${id}`);\n  } catch (error) {\n    console.error('Error deleting alert:', error);\n    throw new Error('Failed to delete alert');\n  }\n};\n\n/**\r\n * Update an existing alert\r\n */\nexport const updateAlert = async (id, alert) => {\n  try {\n    const data = await api.put(`/alerts/${id}`, alert);\n    return mapBackendAlert(data);\n  } catch (error) {\n    console.error('Error updating alert:', error);\n    throw error; // Error handling already done in the apiClient\n  }\n};","map":{"version":3,"names":["mapBackendAlert","api","getAlerts","data","get","map","alert","error","console","Error","createAlert","post","deleteAlert","id","delete","updateAlert","put"],"sources":["C:/Users/adara/Desktop/aaa/Tomorrow/frontend/src/services/alertService.ts"],"sourcesContent":["import { Alert, mapBackendAlert } from '../types/alert';\r\nimport api from './apiClient';\r\n\r\n/**\r\n * Get all alerts\r\n */\r\nexport const getAlerts = async (): Promise<Alert[]> => {\r\n  try {\r\n    const data = await api.get<any[]>('/alerts');\r\n    return data.map((alert: any) => mapBackendAlert(alert));\r\n  } catch (error) {\r\n    console.error('Error fetching alerts:', error);\r\n    throw new Error('Failed to fetch alerts');\r\n  }\r\n};\r\n\r\n/**\r\n * Create a new alert\r\n */\r\nexport const createAlert = async (alert: Omit<Alert, 'id' | '_id' | 'isTriggered' | 'lastChecked' | 'status'>): Promise<Alert> => {\r\n  try {\r\n    const data = await api.post<any>('/alerts', alert);\r\n    return mapBackendAlert(data);\r\n  } catch (error) {\r\n    console.error('Error creating alert:', error);\r\n    throw error; // Error handling already done in the apiClient\r\n  }\r\n};\r\n\r\n/**\r\n * Delete an alert by ID\r\n */\r\nexport const deleteAlert = async (id: string): Promise<void> => {\r\n  try {\r\n    await api.delete(`/alerts/${id}`);\r\n  } catch (error) {\r\n    console.error('Error deleting alert:', error);\r\n    throw new Error('Failed to delete alert');\r\n  }\r\n};\r\n\r\n/**\r\n * Update an existing alert\r\n */\r\nexport const updateAlert = async (id: string, alert: Partial<Alert>): Promise<Alert> => {\r\n  try {\r\n    const data = await api.put<any>(`/alerts/${id}`, alert);\r\n    return mapBackendAlert(data);\r\n  } catch (error) {\r\n    console.error('Error updating alert:', error);\r\n    throw error; // Error handling already done in the apiClient\r\n  }\r\n}; "],"mappings":"AAAA,SAAgBA,eAAe,QAAQ,gBAAgB;AACvD,OAAOC,GAAG,MAAM,aAAa;;AAE7B;AACA;AACA;AACA,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAA8B;EACrD,IAAI;IACF,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAQ,SAAS,CAAC;IAC5C,OAAOD,IAAI,CAACE,GAAG,CAAEC,KAAU,IAAKN,eAAe,CAACM,KAAK,CAAC,CAAC;EACzD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAM,IAAIE,KAAK,CAAC,wBAAwB,CAAC;EAC3C;AACF,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAMC,WAAW,GAAG,MAAOJ,KAA2E,IAAqB;EAChI,IAAI;IACF,MAAMH,IAAI,GAAG,MAAMF,GAAG,CAACU,IAAI,CAAM,SAAS,EAAEL,KAAK,CAAC;IAClD,OAAON,eAAe,CAACG,IAAI,CAAC;EAC9B,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAMK,WAAW,GAAG,MAAOC,EAAU,IAAoB;EAC9D,IAAI;IACF,MAAMZ,GAAG,CAACa,MAAM,CAAC,WAAWD,EAAE,EAAE,CAAC;EACnC,CAAC,CAAC,OAAON,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAM,IAAIE,KAAK,CAAC,wBAAwB,CAAC;EAC3C;AACF,CAAC;;AAED;AACA;AACA;AACA,OAAO,MAAMM,WAAW,GAAG,MAAAA,CAAOF,EAAU,EAAEP,KAAqB,KAAqB;EACtF,IAAI;IACF,MAAMH,IAAI,GAAG,MAAMF,GAAG,CAACe,GAAG,CAAM,WAAWH,EAAE,EAAE,EAAEP,KAAK,CAAC;IACvD,OAAON,eAAe,CAACG,IAAI,CAAC;EAC9B,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}