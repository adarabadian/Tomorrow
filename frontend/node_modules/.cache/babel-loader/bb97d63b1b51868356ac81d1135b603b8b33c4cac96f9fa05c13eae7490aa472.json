{"ast":null,"code":"import axios from 'axios';\nimport { mapBackendAlert } from '../types/alert';\nconst API_BASE_URL = 'http://localhost:3001/api';\n\n/**\r\n * Helper functions for API requests\r\n */\nconst api = {\n  async get(endpoint, params) {\n    try {\n      const response = await axios.get(`${API_BASE_URL}${endpoint}`, {\n        params\n      });\n      return response.data;\n    } catch (error) {\n      handleApiError(error);\n      throw error;\n    }\n  },\n  async post(endpoint, data) {\n    try {\n      const response = await axios.post(`${API_BASE_URL}${endpoint}`, data);\n      return response.data;\n    } catch (error) {\n      handleApiError(error);\n      throw error;\n    }\n  },\n  async put(endpoint, data) {\n    try {\n      const response = await axios.put(`${API_BASE_URL}${endpoint}`, data);\n      return response.data;\n    } catch (error) {\n      handleApiError(error);\n      throw error;\n    }\n  },\n  async delete(endpoint) {\n    try {\n      await axios.delete(`${API_BASE_URL}${endpoint}`);\n    } catch (error) {\n      handleApiError(error);\n      throw error;\n    }\n  }\n};\n\n/**\r\n * Handle API errors and extract useful error messages\r\n */\nconst handleApiError = error => {\n  var _error$response, _error$response$data;\n  if ((_error$response = error.response) !== null && _error$response !== void 0 && (_error$response$data = _error$response.data) !== null && _error$response$data !== void 0 && _error$response$data.error) {\n    throw new Error(error.response.data.error);\n  }\n  console.error('API request failed:', error);\n};\n\n/**\r\n * Get all alerts\r\n */\nexport const getAlerts = async () => {\n  try {\n    const data = await api.get('/alerts');\n    return data.map(alert => mapBackendAlert(alert));\n  } catch (error) {\n    console.error('Error fetching alerts:', error);\n    throw new Error('Failed to fetch alerts');\n  }\n};\n\n/**\r\n * Create a new alert\r\n */\nexport const createAlert = async alert => {\n  try {\n    const data = await api.post('/alerts', alert);\n    return mapBackendAlert(data);\n  } catch (error) {\n    console.error('Error creating alert:', error);\n    throw error;\n  }\n};\n\n/**\r\n * Delete an alert by ID\r\n */\nexport const deleteAlert = async id => {\n  try {\n    await api.delete(`/alerts/${id}`);\n  } catch (error) {\n    console.error('Error deleting alert:', error);\n    throw new Error('Failed to delete alert');\n  }\n};\n\n/**\r\n * Update an existing alert\r\n */\nexport const updateAlert = async (id, alert) => {\n  try {\n    const data = await api.put(`/alerts/${id}`, alert);\n    return mapBackendAlert(data);\n  } catch (error) {\n    console.error('Error updating alert:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","mapBackendAlert","API_BASE_URL","api","get","endpoint","params","response","data","error","handleApiError","post","put","delete","_error$response","_error$response$data","Error","console","getAlerts","map","alert","createAlert","deleteAlert","id","updateAlert"],"sources":["C:/Users/adara/Desktop/aaa/Tomorrow/frontend/src/services/alertService.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { Alert, mapBackendAlert } from '../types/alert';\r\n\r\nconst API_BASE_URL = 'http://localhost:3001/api';\r\n\r\n/**\r\n * Helper functions for API requests\r\n */\r\nconst api = {\r\n  async get<T>(endpoint: string, params?: any): Promise<T> {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}${endpoint}`, { params });\r\n      return response.data;\r\n    } catch (error: any) {\r\n      handleApiError(error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  async post<T>(endpoint: string, data: any): Promise<T> {\r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}${endpoint}`, data);\r\n      return response.data;\r\n    } catch (error: any) {\r\n      handleApiError(error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  async put<T>(endpoint: string, data: any): Promise<T> {\r\n    try {\r\n      const response = await axios.put(`${API_BASE_URL}${endpoint}`, data);\r\n      return response.data;\r\n    } catch (error: any) {\r\n      handleApiError(error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  async delete(endpoint: string): Promise<void> {\r\n    try {\r\n      await axios.delete(`${API_BASE_URL}${endpoint}`);\r\n    } catch (error: any) {\r\n      handleApiError(error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Handle API errors and extract useful error messages\r\n */\r\nconst handleApiError = (error: any): void => {\r\n  if (error.response?.data?.error) {\r\n    throw new Error(error.response.data.error);\r\n  }\r\n  console.error('API request failed:', error);\r\n};\r\n\r\n/**\r\n * Get all alerts\r\n */\r\nexport const getAlerts = async (): Promise<Alert[]> => {\r\n  try {\r\n    const data = await api.get<any[]>('/alerts');\r\n    return data.map((alert: any) => mapBackendAlert(alert));\r\n  } catch (error) {\r\n    console.error('Error fetching alerts:', error);\r\n    throw new Error('Failed to fetch alerts');\r\n  }\r\n};\r\n\r\n/**\r\n * Create a new alert\r\n */\r\nexport const createAlert = async (alert: Omit<Alert, 'id' | '_id' | 'isTriggered' | 'lastChecked' | 'status'>): Promise<Alert> => {\r\n  try {\r\n    const data = await api.post<any>('/alerts', alert);\r\n    return mapBackendAlert(data);\r\n  } catch (error) {\r\n    console.error('Error creating alert:', error);\r\n    throw error; \r\n  }\r\n};\r\n\r\n/**\r\n * Delete an alert by ID\r\n */\r\nexport const deleteAlert = async (id: string): Promise<void> => {\r\n  try {\r\n    await api.delete(`/alerts/${id}`);\r\n  } catch (error) {\r\n    console.error('Error deleting alert:', error);\r\n    throw new Error('Failed to delete alert');\r\n  }\r\n};\r\n\r\n/**\r\n * Update an existing alert\r\n */\r\nexport const updateAlert = async (id: string, alert: Partial<Alert>): Promise<Alert> => {\r\n  try {\r\n    const data = await api.put<any>(`/alerts/${id}`, alert);\r\n    return mapBackendAlert(data);\r\n  } catch (error) {\r\n    console.error('Error updating alert:', error);\r\n    throw error;\r\n  }\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}