{"ast":null,"code":"import api from './apiClient';\n/**\r\n * Fetch current weather data for a location\r\n */\nexport const fetchCurrentWeather = async location => {\n  try {\n    const params = 'lat' in location ? {\n      lat: location.lat,\n      lon: location.lon\n    } : {\n      city: location.city\n    };\n    return api.get('/weather/current', params);\n  } catch (error) {\n    console.error('Error fetching weather data:', error);\n    throw new Error('Failed to fetch weather data');\n  }\n};","map":{"version":3,"names":["api","fetchCurrentWeather","location","params","lat","lon","city","get","error","console","Error"],"sources":["C:/Users/adara/Desktop/aaa/Tomorrow/frontend/src/services/weatherService.ts"],"sourcesContent":["import { WeatherData } from '../types/weather';\r\nimport api from './apiClient';\r\n\r\nexport type LocationParam = { lat: number; lon: number } | { city: string };\r\n\r\n/**\r\n * Fetch current weather data for a location\r\n */\r\nexport const fetchCurrentWeather = async (location: LocationParam): Promise<WeatherData> => {\r\n  try {\r\n    const params = 'lat' in location\r\n      ? { lat: location.lat, lon: location.lon }\r\n      : { city: location.city };\r\n\r\n    return api.get<WeatherData>('/weather/current', params);\r\n  } catch (error) {\r\n    console.error('Error fetching weather data:', error);\r\n    throw new Error('Failed to fetch weather data');\r\n  }\r\n}; "],"mappings":"AACA,OAAOA,GAAG,MAAM,aAAa;AAI7B;AACA;AACA;AACA,OAAO,MAAMC,mBAAmB,GAAG,MAAOC,QAAuB,IAA2B;EAC1F,IAAI;IACF,MAAMC,MAAM,GAAG,KAAK,IAAID,QAAQ,GAC5B;MAAEE,GAAG,EAAEF,QAAQ,CAACE,GAAG;MAAEC,GAAG,EAAEH,QAAQ,CAACG;IAAI,CAAC,GACxC;MAAEC,IAAI,EAAEJ,QAAQ,CAACI;IAAK,CAAC;IAE3B,OAAON,GAAG,CAACO,GAAG,CAAc,kBAAkB,EAAEJ,MAAM,CAAC;EACzD,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAM,IAAIE,KAAK,CAAC,8BAA8B,CAAC;EACjD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}