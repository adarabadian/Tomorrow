{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adara\\\\Desktop\\\\aaa\\\\Tomorrow\\\\frontend\\\\src\\\\components\\\\AlertEditForm\\\\AlertEditForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions, CircularProgress, Box, Typography } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport AlertBasicInfo from '../AlertBasicInfo/AlertBasicInfo';\nimport LocationInput from '../LocationInput/LocationInput';\nimport AlertParameters from '../AlertParameters/AlertParameters';\nimport FeedbackMessage from '../FeedbackMessage/FeedbackMessage';\nimport './AlertEditForm.css';\nimport '../Animations.css';\n\n// Types\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AlertEditForm = ({\n  alert,\n  open,\n  onClose,\n  onSubmit\n}) => {\n  _s();\n  const [editedAlert, setEditedAlert] = useState({\n    name: '',\n    description: '',\n    location: {\n      city: ''\n    },\n    parameter: 'temperature',\n    threshold: 0,\n    condition: '>',\n    userEmail: '',\n    lastValue: undefined\n  });\n  const [useCoordinates, setUseCoordinates] = useState(false);\n  const [formErrors, setFormErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [formTouched, setFormTouched] = useState({});\n\n  // Initialize form with alert data when opened\n  useEffect(() => {\n    if (alert && open) {\n      setIsLoading(true);\n\n      // Simulate loading delay for better UX\n      const timer = setTimeout(() => {\n        setEditedAlert({\n          name: alert.name,\n          description: alert.description || '',\n          location: alert.location,\n          parameter: alert.parameter,\n          threshold: alert.threshold,\n          condition: alert.condition,\n          userEmail: alert.userEmail,\n          lastValue: alert.lastValue\n        });\n\n        // Set location type\n        setUseCoordinates(!!alert.location.coordinates);\n        setIsLoading(false);\n\n        // Reset touched states\n        setFormTouched({});\n      }, 500);\n      return () => clearTimeout(timer);\n    }\n  }, [alert, open]);\n\n  // Handle form input changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (!name) return;\n\n    // Mark field as touched\n    setFormTouched({\n      ...formTouched,\n      [name]: true\n    });\n    if (name === 'lat' || name === 'lon') {\n      var _editedAlert$location;\n      setEditedAlert({\n        ...editedAlert,\n        location: {\n          ...editedAlert.location,\n          coordinates: {\n            ...(((_editedAlert$location = editedAlert.location) === null || _editedAlert$location === void 0 ? void 0 : _editedAlert$location.coordinates) || {\n              lat: 0,\n              lon: 0\n            }),\n            [name]: Number(value)\n          }\n        }\n      });\n    } else if (name === 'city') {\n      setEditedAlert({\n        ...editedAlert,\n        location: {\n          city: value\n        }\n      });\n    } else {\n      setEditedAlert({\n        ...editedAlert,\n        [name]: value\n      });\n    }\n\n    // Validate field as user types\n    validateField(name, value);\n  };\n\n  // Validate a single field\n  const validateField = (name, value) => {\n    let error = null;\n    switch (name) {\n      case 'name':\n        if (!value || typeof value === 'string' && !value.trim()) {\n          error = 'Name is required';\n        }\n        break;\n      case 'userEmail':\n        if (!value || typeof value === 'string' && !value.trim()) {\n          error = 'Email is required for notifications';\n        } else if (!/\\S+@\\S+\\.\\S+/.test(value)) {\n          error = 'Email address is invalid';\n        }\n        break;\n      case 'city':\n        if (useCoordinates) break;\n        if (!value || typeof value === 'string' && !value.trim()) {\n          error = 'City is required';\n        }\n        break;\n      case 'lat':\n        if (!useCoordinates) break;\n        const lat = Number(value);\n        if (isNaN(lat)) {\n          error = 'Latitude must be a number';\n        } else if (lat < -90 || lat > 90) {\n          error = 'Latitude must be between -90 and 90';\n        }\n        break;\n      case 'lon':\n        if (!useCoordinates) break;\n        const lon = Number(value);\n        if (isNaN(lon)) {\n          error = 'Longitude must be a number';\n        } else if (lon < -180 || lon > 180) {\n          error = 'Longitude must be between -180 and 180';\n        }\n        break;\n    }\n    setFormErrors(prev => ({\n      ...prev,\n      [name]: error\n    }));\n    return !error;\n  };\n\n  // Toggle between city and coordinates\n  const handleLocationTypeChange = e => {\n    setUseCoordinates(e.target.checked);\n    if (e.target.checked) {\n      setEditedAlert({\n        ...editedAlert,\n        location: {\n          coordinates: {\n            lat: 0,\n            lon: 0\n          }\n        }\n      });\n    } else {\n      setEditedAlert({\n        ...editedAlert,\n        location: {\n          city: ''\n        }\n      });\n    }\n\n    // Reset location-related errors\n    setFormErrors({\n      ...formErrors,\n      city: null,\n      lat: null,\n      lon: null\n    });\n  };\n\n  // Validate form before submission\n  const validateForm = () => {\n    // Validate all fields\n    const requiredFields = ['name', 'userEmail'];\n    if (useCoordinates) {\n      requiredFields.push('lat', 'lon');\n    } else {\n      requiredFields.push('city');\n    }\n    let isValid = true;\n\n    // Mark all fields as touched\n    const newTouched = {};\n    requiredFields.forEach(field => {\n      newTouched[field] = true;\n    });\n    setFormTouched(newTouched);\n\n    // Validate each field\n    requiredFields.forEach(field => {\n      let value;\n      if (field === 'lat' || field === 'lon') {\n        var _editedAlert$location2, _editedAlert$location3;\n        value = (_editedAlert$location2 = editedAlert.location) === null || _editedAlert$location2 === void 0 ? void 0 : (_editedAlert$location3 = _editedAlert$location2.coordinates) === null || _editedAlert$location3 === void 0 ? void 0 : _editedAlert$location3[field];\n      } else if (field === 'city') {\n        var _editedAlert$location4;\n        value = (_editedAlert$location4 = editedAlert.location) === null || _editedAlert$location4 === void 0 ? void 0 : _editedAlert$location4.city;\n      } else {\n        value = editedAlert[field];\n      }\n      const fieldValid = validateField(field, value);\n      if (!fieldValid) isValid = false;\n    });\n    return isValid;\n  };\n\n  // Submit updated alert\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) return;\n    try {\n      setIsSubmitting(true);\n\n      // Create update data without status-related fields \n      // (server recalculates isTriggered based on conditions)\n      await onSubmit(alert.id, editedAlert);\n      setSuccessMessage(\"Alert updated successfully!\");\n\n      // Close the modal immediately after successful update\n      onClose();\n    } catch (err) {\n      console.error('Error updating alert:', err);\n      setIsSubmitting(false);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: onClose,\n    maxWidth: \"md\",\n    fullWidth: true,\n    TransitionProps: {\n      timeout: 400\n    },\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      className: \"alert-edit-dialog-title\",\n      children: [\"Edit Alert: \", alert === null || alert === void 0 ? void 0 : alert.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      className: \"alert-edit-dialog-content\",\n      sx: {\n        padding: '8px !important'\n      },\n      children: isLoading ? /*#__PURE__*/_jsxDEV(FeedbackMessage, {\n        type: \"loading\",\n        message: \"Loading alert data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"alert-edit-form\",\n        children: [successMessage && /*#__PURE__*/_jsxDEV(FeedbackMessage, {\n          type: \"success\",\n          message: successMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: \"form-field-animation-1\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            className: \"alert-edit-section-title\",\n            gutterBottom: true,\n            children: \"Basic Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AlertBasicInfo, {\n            name: editedAlert.name || '',\n            description: editedAlert.description || '',\n            userEmail: editedAlert.userEmail || '',\n            onInputChange: handleInputChange,\n            formErrors: formErrors\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: \"form-field-animation-2\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            className: \"alert-edit-section-title\",\n            gutterBottom: true,\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(LocationInput, {\n            useCoordinates: useCoordinates,\n            onLocationTypeChange: handleLocationTypeChange,\n            location: editedAlert.location || {\n              city: ''\n            },\n            onInputChange: handleInputChange,\n            formErrors: formErrors\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: \"form-field-animation-3\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            className: \"alert-edit-section-title\",\n            gutterBottom: true,\n            children: \"Alert Conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AlertParameters, {\n            parameter: editedAlert.parameter || 'temperature',\n            condition: editedAlert.condition || '>',\n            threshold: editedAlert.threshold || 0,\n            onInputChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      className: \"alert-edit-dialog-actions\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        color: \"inherit\",\n        disabled: isSubmitting,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        startIcon: isSubmitting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 20,\n          color: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 37\n        }, this) : /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 86\n        }, this),\n        disabled: isSubmitting || isLoading,\n        className: \"animate-fadeIn delay-200\",\n        children: isSubmitting ? 'Saving...' : 'Save Changes'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 5\n  }, this);\n};\n_s(AlertEditForm, \"Ye3zPMmYeT/+YwOmd+HBcaFdKrQ=\");\n_c = AlertEditForm;\nexport default AlertEditForm;\nvar _c;\n$RefreshReg$(_c, \"AlertEditForm\");","map":{"version":3,"names":["React","useState","useEffect","Button","Dialog","DialogTitle","DialogContent","DialogActions","CircularProgress","Box","Typography","EditIcon","AlertBasicInfo","LocationInput","AlertParameters","FeedbackMessage","jsxDEV","_jsxDEV","AlertEditForm","alert","open","onClose","onSubmit","_s","editedAlert","setEditedAlert","name","description","location","city","parameter","threshold","condition","userEmail","lastValue","undefined","useCoordinates","setUseCoordinates","formErrors","setFormErrors","isSubmitting","setIsSubmitting","isLoading","setIsLoading","successMessage","setSuccessMessage","formTouched","setFormTouched","timer","setTimeout","coordinates","clearTimeout","handleInputChange","e","value","target","_editedAlert$location","lat","lon","Number","validateField","error","trim","test","isNaN","prev","handleLocationTypeChange","checked","validateForm","requiredFields","push","isValid","newTouched","forEach","field","_editedAlert$location2","_editedAlert$location3","_editedAlert$location4","fieldValid","handleSubmit","preventDefault","id","err","console","maxWidth","fullWidth","TransitionProps","timeout","children","className","fileName","_jsxFileName","lineNumber","columnNumber","sx","padding","type","message","variant","gutterBottom","onInputChange","onLocationTypeChange","onClick","color","disabled","startIcon","size","_c","$RefreshReg$"],"sources":["C:/Users/adara/Desktop/aaa/Tomorrow/frontend/src/components/AlertEditForm/AlertEditForm.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  CircularProgress,\n  Box,\n  Typography\n} from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport AlertBasicInfo from '../AlertBasicInfo/AlertBasicInfo';\nimport LocationInput from '../LocationInput/LocationInput';\nimport AlertParameters from '../AlertParameters/AlertParameters';\nimport FeedbackMessage from '../FeedbackMessage/FeedbackMessage';\nimport { Alert } from '../../types/alert';\nimport './AlertEditForm.css';\nimport '../Animations.css';\n\n// Types\ninterface AlertEditFormProps {\n  alert: Alert;\n  open: boolean;\n  onClose: () => void;\n  onSubmit: (id: string, alert: Partial<Alert>) => Promise<void>;\n}\n\nconst AlertEditForm: React.FC<AlertEditFormProps> = ({ alert, open, onClose, onSubmit }) => {\n  const [editedAlert, setEditedAlert] = useState<Partial<Alert>>({\n    name: '',\n    description: '',\n    location: {\n      city: ''\n    },\n    parameter: 'temperature',\n    threshold: 0,\n    condition: '>',\n    userEmail: '',\n    lastValue: undefined\n  });\n  const [useCoordinates, setUseCoordinates] = useState(false);\n  const [formErrors, setFormErrors] = useState<Record<string, string | null>>({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [successMessage, setSuccessMessage] = useState<string | null>(null);\n  const [formTouched, setFormTouched] = useState<Record<string, boolean>>({});\n\n  // Initialize form with alert data when opened\n  useEffect(() => {\n    if (alert && open) {\n      setIsLoading(true);\n      \n      // Simulate loading delay for better UX\n      const timer = setTimeout(() => {\n        setEditedAlert({\n          name: alert.name,\n          description: alert.description || '',\n          location: alert.location,\n          parameter: alert.parameter,\n          threshold: alert.threshold,\n          condition: alert.condition,\n          userEmail: alert.userEmail,\n          lastValue: alert.lastValue\n        });\n        \n        // Set location type\n        setUseCoordinates(!!alert.location.coordinates);\n        setIsLoading(false);\n        \n        // Reset touched states\n        setFormTouched({});\n      }, 500);\n      \n      return () => clearTimeout(timer);\n    }\n  }, [alert, open]);\n\n  // Handle form input changes\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | { name?: string; value: unknown }>) => {\n    const { name, value } = e.target;\n    \n    if (!name) return;\n    \n    // Mark field as touched\n    setFormTouched({\n      ...formTouched,\n      [name]: true\n    });\n    \n    if (name === 'lat' || name === 'lon') {\n      setEditedAlert({\n        ...editedAlert,\n        location: {\n          ...editedAlert.location,\n          coordinates: {\n            ...(editedAlert.location?.coordinates || { lat: 0, lon: 0 }),\n            [name]: Number(value)\n          }\n        }\n      });\n    } else if (name === 'city') {\n      setEditedAlert({\n        ...editedAlert,\n        location: { city: value as string }\n      });\n    } else {\n      setEditedAlert({\n        ...editedAlert,\n        [name]: value\n      });\n    }\n    \n    // Validate field as user types\n    validateField(name, value);\n  };\n\n  // Validate a single field\n  const validateField = (name: string, value: unknown): boolean => {\n    let error: string | null = null;\n    \n    switch (name) {\n      case 'name':\n        if (!value || (typeof value === 'string' && !value.trim())) {\n          error = 'Name is required';\n        }\n        break;\n      case 'userEmail':\n        if (!value || (typeof value === 'string' && !value.trim())) {\n          error = 'Email is required for notifications';\n        } else if (!/\\S+@\\S+\\.\\S+/.test(value as string)) {\n          error = 'Email address is invalid';\n        }\n        break;\n      case 'city':\n        if (useCoordinates) break;\n        if (!value || (typeof value === 'string' && !value.trim())) {\n          error = 'City is required';\n        }\n        break;\n      case 'lat':\n        if (!useCoordinates) break;\n        const lat = Number(value);\n        if (isNaN(lat)) {\n          error = 'Latitude must be a number';\n        } else if (lat < -90 || lat > 90) {\n          error = 'Latitude must be between -90 and 90';\n        }\n        break;\n      case 'lon':\n        if (!useCoordinates) break;\n        const lon = Number(value);\n        if (isNaN(lon)) {\n          error = 'Longitude must be a number';\n        } else if (lon < -180 || lon > 180) {\n          error = 'Longitude must be between -180 and 180';\n        }\n        break;\n    }\n    \n    setFormErrors(prev => ({\n      ...prev,\n      [name]: error\n    }));\n    \n    return !error;\n  };\n\n  // Toggle between city and coordinates\n  const handleLocationTypeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setUseCoordinates(e.target.checked);\n    if (e.target.checked) {\n      setEditedAlert({\n        ...editedAlert,\n        location: { coordinates: { lat: 0, lon: 0 } }\n      });\n    } else {\n      setEditedAlert({\n        ...editedAlert,\n        location: { city: '' }\n      });\n    }\n    \n    // Reset location-related errors\n    setFormErrors({\n      ...formErrors,\n      city: null,\n      lat: null,\n      lon: null\n    });\n  };\n\n  // Validate form before submission\n  const validateForm = () => {\n    // Validate all fields\n    const requiredFields = ['name', 'userEmail'];\n    if (useCoordinates) {\n      requiredFields.push('lat', 'lon');\n    } else {\n      requiredFields.push('city');\n    }\n    \n    let isValid = true;\n    \n    // Mark all fields as touched\n    const newTouched: Record<string, boolean> = {};\n    requiredFields.forEach(field => {\n      newTouched[field] = true;\n    });\n    setFormTouched(newTouched);\n    \n    // Validate each field\n    requiredFields.forEach(field => {\n      let value;\n      if (field === 'lat' || field === 'lon') {\n        value = editedAlert.location?.coordinates?.[field as 'lat' | 'lon'];\n      } else if (field === 'city') {\n        value = editedAlert.location?.city;\n      } else {\n        value = editedAlert[field as keyof Partial<Alert>];\n      }\n      \n      const fieldValid = validateField(field, value);\n      if (!fieldValid) isValid = false;\n    });\n    \n    return isValid;\n  };\n\n  // Submit updated alert\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) return;\n    \n    try {\n      setIsSubmitting(true);\n\n      // Create update data without status-related fields \n      // (server recalculates isTriggered based on conditions)\n      await onSubmit(alert.id, editedAlert);\n      setSuccessMessage(\"Alert updated successfully!\");\n      \n      // Close the modal immediately after successful update\n      onClose();\n    } catch (err) {\n      console.error('Error updating alert:', err);\n      setIsSubmitting(false);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <Dialog \n      open={open} \n      onClose={onClose} \n      maxWidth=\"md\" \n      fullWidth\n      TransitionProps={{\n        timeout: 400\n      }}\n    >\n      <DialogTitle className=\"alert-edit-dialog-title\">Edit Alert: {alert?.name}</DialogTitle>\n      \n      <DialogContent className=\"alert-edit-dialog-content\" sx={{ padding: '8px !important' }}>\n        {isLoading ? (\n          <FeedbackMessage type=\"loading\" message=\"Loading alert data...\" />\n        ) : (\n          <form onSubmit={handleSubmit} className=\"alert-edit-form\">\n            {successMessage && (\n              <FeedbackMessage type=\"success\" message={successMessage} />\n            )}\n            \n            <Box className=\"form-field-animation-1\">\n              <Typography variant=\"subtitle1\" className=\"alert-edit-section-title\" gutterBottom>\n                Basic Information\n              </Typography>\n              <AlertBasicInfo \n                name={editedAlert.name || ''}\n                description={editedAlert.description || ''}\n                userEmail={editedAlert.userEmail || ''}\n                onInputChange={handleInputChange}\n                formErrors={formErrors}\n              />\n            </Box>\n            \n            <Box className=\"form-field-animation-2\">\n              <Typography variant=\"subtitle1\" className=\"alert-edit-section-title\" gutterBottom>\n                Location\n              </Typography>\n              <LocationInput \n                useCoordinates={useCoordinates}\n                onLocationTypeChange={handleLocationTypeChange}\n                location={editedAlert.location || { city: '' }}\n                onInputChange={handleInputChange}\n                formErrors={formErrors}\n              />\n            </Box>\n            \n            <Box className=\"form-field-animation-3\">\n              <Typography variant=\"subtitle1\" className=\"alert-edit-section-title\" gutterBottom>\n                Alert Conditions\n              </Typography>\n              <AlertParameters \n                parameter={editedAlert.parameter || 'temperature'}\n                condition={editedAlert.condition || '>'}\n                threshold={editedAlert.threshold || 0}\n                onInputChange={handleInputChange}\n              />\n            </Box>\n          </form>\n        )}\n      </DialogContent>\n      \n      <DialogActions className=\"alert-edit-dialog-actions\">\n        <Button onClick={onClose} color=\"inherit\" disabled={isSubmitting}>\n          Cancel\n        </Button>\n        <Button \n          onClick={handleSubmit}\n          variant=\"contained\" \n          color=\"primary\" \n          startIcon={isSubmitting ? <CircularProgress size={20} color=\"inherit\" /> : <EditIcon />}\n          disabled={isSubmitting || isLoading}\n          className=\"animate-fadeIn delay-200\"\n        >\n          {isSubmitting ? 'Saving...' : 'Save Changes'}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default AlertEditForm; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}