{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adara\\\\Desktop\\\\aaa\\\\Tomorrow\\\\frontend\\\\src\\\\components\\\\Notifications\\\\Notifications.tsx\";\nimport React from 'react';\nimport { Snackbar, Alert as MuiAlert, Box, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Notifications = ({\n  successMessage,\n  errorMessage,\n  onClearSuccess,\n  onClearError\n}) => {\n  // Determine if this is a rate limit error\n  const isRateLimitError = errorMessage === null || errorMessage === void 0 ? void 0 : errorMessage.includes('API rate limit exceeded');\n\n  // Use a longer duration for rate limit errors\n  const errorDuration = isRateLimitError ? 10000 : 6000;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      open: !!successMessage,\n      autoHideDuration: 6000,\n      onClose: onClearSuccess,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(MuiAlert, {\n        onClose: onClearSuccess,\n        severity: \"success\",\n        variant: \"filled\",\n        sx: {\n          width: '100%'\n        },\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: !!errorMessage,\n      autoHideDuration: errorDuration,\n      onClose: onClearError,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(MuiAlert, {\n        onClose: onClearError,\n        severity: \"error\",\n        variant: \"filled\",\n        sx: {\n          width: '100%'\n        },\n        children: isRateLimitError ? /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            fontWeight: \"bold\",\n            children: \"API Rate Limit Exceeded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this) : errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = Notifications;\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","Snackbar","Alert","MuiAlert","Box","Typography","jsxDEV","_jsxDEV","Fragment","_Fragment","Notifications","successMessage","errorMessage","onClearSuccess","onClearError","isRateLimitError","includes","errorDuration","children","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","variant","sx","width","fileName","_jsxFileName","lineNumber","columnNumber","fontWeight","_c","$RefreshReg$"],"sources":["C:/Users/adara/Desktop/aaa/Tomorrow/frontend/src/components/Notifications/Notifications.tsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Snackbar,\r\n  Alert as MuiAlert, \r\n  Box,\r\n  Typography\r\n} from '@mui/material';\r\n\r\ninterface NotificationsProps {\r\n  successMessage: string | null;\r\n  errorMessage: string | null;\r\n  onClearSuccess: () => void;\r\n  onClearError: () => void;\r\n}\r\n\r\nconst Notifications: React.FC<NotificationsProps> = ({\r\n  successMessage,\r\n  errorMessage,\r\n  onClearSuccess,\r\n  onClearError\r\n}) => {\r\n  // Determine if this is a rate limit error\r\n  const isRateLimitError = errorMessage?.includes('API rate limit exceeded');\r\n  \r\n  // Use a longer duration for rate limit errors\r\n  const errorDuration = isRateLimitError ? 10000 : 6000;\r\n\r\n  return (\r\n    <>\r\n      {/* Success Snackbar */}\r\n      <Snackbar \r\n        open={!!successMessage} \r\n        autoHideDuration={6000} \r\n        onClose={onClearSuccess}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n      >\r\n        <MuiAlert \r\n          onClose={onClearSuccess} \r\n          severity=\"success\" \r\n          variant=\"filled\"\r\n          sx={{ width: '100%' }}\r\n        >\r\n          {successMessage}\r\n        </MuiAlert>\r\n      </Snackbar>\r\n      \r\n      {/* Error Snackbar */}\r\n      <Snackbar \r\n        open={!!errorMessage} \r\n        autoHideDuration={errorDuration} \r\n        onClose={onClearError}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n      >\r\n        <MuiAlert \r\n          onClose={onClearError} \r\n          severity=\"error\" \r\n          variant=\"filled\"\r\n          sx={{ width: '100%' }}\r\n        >\r\n          {isRateLimitError ? (\r\n            <Box>\r\n              <Typography variant=\"subtitle2\" fontWeight=\"bold\">\r\n                API Rate Limit Exceeded\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                {errorMessage}\r\n              </Typography>\r\n            </Box>\r\n          ) : (\r\n            errorMessage\r\n          )}\r\n        </MuiAlert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Notifications; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,QAAQ,EACRC,KAAK,IAAIC,QAAQ,EACjBC,GAAG,EACHC,UAAU,QACL,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AASvB,MAAMC,aAA2C,GAAGA,CAAC;EACnDC,cAAc;EACdC,YAAY;EACZC,cAAc;EACdC;AACF,CAAC,KAAK;EACJ;EACA,MAAMC,gBAAgB,GAAGH,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEI,QAAQ,CAAC,yBAAyB,CAAC;;EAE1E;EACA,MAAMC,aAAa,GAAGF,gBAAgB,GAAG,KAAK,GAAG,IAAI;EAErD,oBACER,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBAEEX,OAAA,CAACN,QAAQ;MACPkB,IAAI,EAAE,CAAC,CAACR,cAAe;MACvBS,gBAAgB,EAAE,IAAK;MACvBC,OAAO,EAAER,cAAe;MACxBS,YAAY,EAAE;QAAEC,QAAQ,EAAE,QAAQ;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAAN,QAAA,eAE3DX,OAAA,CAACJ,QAAQ;QACPkB,OAAO,EAAER,cAAe;QACxBY,QAAQ,EAAC,SAAS;QAClBC,OAAO,EAAC,QAAQ;QAChBC,EAAE,EAAE;UAAEC,KAAK,EAAE;QAAO,CAAE;QAAAV,QAAA,EAErBP;MAAc;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGXzB,OAAA,CAACN,QAAQ;MACPkB,IAAI,EAAE,CAAC,CAACP,YAAa;MACrBQ,gBAAgB,EAAEH,aAAc;MAChCI,OAAO,EAAEP,YAAa;MACtBQ,YAAY,EAAE;QAAEC,QAAQ,EAAE,QAAQ;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAAN,QAAA,eAE3DX,OAAA,CAACJ,QAAQ;QACPkB,OAAO,EAAEP,YAAa;QACtBW,QAAQ,EAAC,OAAO;QAChBC,OAAO,EAAC,QAAQ;QAChBC,EAAE,EAAE;UAAEC,KAAK,EAAE;QAAO,CAAE;QAAAV,QAAA,EAErBH,gBAAgB,gBACfR,OAAA,CAACH,GAAG;UAAAc,QAAA,gBACFX,OAAA,CAACF,UAAU;YAACqB,OAAO,EAAC,WAAW;YAACO,UAAU,EAAC,MAAM;YAAAf,QAAA,EAAC;UAElD;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACbzB,OAAA,CAACF,UAAU;YAACqB,OAAO,EAAC,OAAO;YAAAR,QAAA,EACxBN;UAAY;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,GAENpB;MACD;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,eACX,CAAC;AAEP,CAAC;AAACE,EAAA,GA5DIxB,aAA2C;AA8DjD,eAAeA,aAAa;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}