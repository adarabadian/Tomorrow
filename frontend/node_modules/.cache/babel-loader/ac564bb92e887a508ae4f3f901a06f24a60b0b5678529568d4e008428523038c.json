{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adara\\\\Desktop\\\\aaa\\\\Tomorrow\\\\frontend\\\\src\\\\components\\\\Navigation\\\\Navbar.tsx\";\nimport React from 'react';\nimport { AppBar, Toolbar, Typography, Button, Box, IconButton, Tooltip } from '@mui/material';\nimport { Link as RouterLink } from 'react-router-dom';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport HomeIcon from '@mui/icons-material/Home';\nimport NotificationsIcon from '@mui/icons-material/Notifications';\nimport WarningIcon from '@mui/icons-material/Warning';\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport { Link } from '@mui/material';\nimport logo from '../../assets/logo.png';\n\n// Map icon strings to actual components\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst iconMap = {\n  'HomeIcon': HomeIcon,\n  'NotificationsIcon': NotificationsIcon,\n  'WarningIcon': WarningIcon\n};\nconst Navbar = ({\n  isMobile,\n  toggleDrawer,\n  navItems,\n  isActive\n}) => {\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: \"sticky\",\n    elevation: 0,\n    color: \"primary\",\n    sx: {\n      borderBottom: t => `1px solid ${t.palette.divider}`,\n      backgroundImage: \"linear-gradient(90deg, #1e88e5 0%, #42a5f5 100%)\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      children: isMobile ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton\n        // color=\"White\"\n        , {\n          co: true,\n          \"aria-label\": \"open drawer\",\n          edge: \"start\",\n          onClick: toggleDrawer,\n          sx: {\n            mr: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            component: \"img\",\n            src: logo,\n            alt: \"Tomorrow Weather Logo\",\n            sx: {\n              height: 32,\n              mr: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            fontWeight: \"bold\",\n            children: \"Weather Alerts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\",\n            alignItems: \"center\",\n            mr: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            component: \"img\",\n            src: logo,\n            alt: \"Tomorrow Weather Logo\",\n            sx: {\n              height: 40,\n              mr: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            fontWeight: \"bold\",\n            children: \"Weather Alert System\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1,\n            display: \"flex\"\n          },\n          children: navItems.map(item => {\n            const IconComponent = iconMap[item.icon];\n            return /*#__PURE__*/_jsxDEV(Button, {\n              component: RouterLink,\n              to: item.path,\n              color: \"inherit\",\n              sx: {\n                mx: 1,\n                fontWeight: isActive(item.path) ? \"bold\" : \"normal\",\n                borderBottom: isActive(item.path) ? \"3px solid white\" : \"none\",\n                borderRadius: 0,\n                py: 2,\n                \"&:hover\": {\n                  backgroundColor: \"rgba(255, 255, 255, 0.1)\"\n                }\n              },\n              startIcon: /*#__PURE__*/_jsxDEV(IconComponent, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 50\n              }, this),\n              children: item.name\n            }, item.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 35\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"View source code\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"inherit\",\n            \"aria-label\": \"github\",\n            component: Link,\n            href: \"https://github.com/adarabadian/Tomorrow\",\n            target: \"_blank\",\n            children: /*#__PURE__*/_jsxDEV(GitHubIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n};\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","AppBar","Toolbar","Typography","Button","Box","IconButton","Tooltip","Link","RouterLink","MenuIcon","HomeIcon","NotificationsIcon","WarningIcon","GitHubIcon","logo","jsxDEV","_jsxDEV","Fragment","_Fragment","iconMap","Navbar","isMobile","toggleDrawer","navItems","isActive","position","elevation","color","sx","borderBottom","t","palette","divider","backgroundImage","children","co","edge","onClick","mr","fileName","_jsxFileName","lineNumber","columnNumber","display","alignItems","component","src","alt","height","variant","fontWeight","flexGrow","map","item","IconComponent","icon","to","path","mx","borderRadius","py","backgroundColor","startIcon","name","title","href","target","_c","$RefreshReg$"],"sources":["C:/Users/adara/Desktop/aaa/Tomorrow/frontend/src/components/Navigation/Navbar.tsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Button,\r\n  Box,\r\n  IconButton,\r\n  Tooltip\r\n} from '@mui/material';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications'; \r\nimport WarningIcon from '@mui/icons-material/Warning';\r\nimport GitHubIcon from '@mui/icons-material/GitHub';\r\nimport { Link } from '@mui/material';\r\nimport logo from '../../assets/logo.png';\r\n\r\n// Map icon strings to actual components\r\nconst iconMap = {\r\n  'HomeIcon': HomeIcon,\r\n  'NotificationsIcon': NotificationsIcon,\r\n  'WarningIcon': WarningIcon\r\n};\r\n\r\ninterface NavbarProps {\r\n  isMobile: boolean;\r\n  toggleDrawer: () => void;\r\n  navItems: Array<{\r\n    name: string;\r\n    path: string;\r\n    icon: string;\r\n  }>;\r\n  isActive: (path: string) => boolean;\r\n}\r\n\r\nconst Navbar: React.FC<NavbarProps> = ({ \r\n  isMobile, \r\n  toggleDrawer, \r\n  navItems,\r\n  isActive \r\n}) => {\r\n  return (\r\n      <AppBar\r\n          position=\"sticky\"\r\n          elevation={0}\r\n          color=\"primary\"\r\n          sx={{\r\n              borderBottom: (t) => `1px solid ${t.palette.divider}`,\r\n              backgroundImage:\r\n                  \"linear-gradient(90deg, #1e88e5 0%, #42a5f5 100%)\",\r\n          }}\r\n      >\r\n          <Toolbar>\r\n              {isMobile ? (\r\n                  <>\r\n                      <IconButton\r\n                          // color=\"White\"\r\n                          co\r\n                          aria-label=\"open drawer\"\r\n                          edge=\"start\"\r\n                          onClick={toggleDrawer}\r\n                          sx={{ mr: 2 }}\r\n                      >\r\n                          <MenuIcon />\r\n                      </IconButton>\r\n                      <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n                          <Box\r\n                            component=\"img\"\r\n                            src={logo}\r\n                            alt=\"Tomorrow Weather Logo\"\r\n                            sx={{ height: 32, mr: 1 }}\r\n                          />\r\n                          <Typography variant=\"h6\" fontWeight=\"bold\">\r\n                              Weather Alerts\r\n                          </Typography>\r\n                      </Box>\r\n                  </>\r\n              ) : (\r\n                  <>\r\n                      <Box\r\n                          sx={{ display: \"flex\", alignItems: \"center\", mr: 4 }}\r\n                      >\r\n                          <Box\r\n                            component=\"img\"\r\n                            src={logo}\r\n                            alt=\"Tomorrow Weather Logo\"\r\n                            sx={{ height: 40, mr: 1 }}\r\n                          />\r\n                          <Typography variant=\"h6\" fontWeight=\"bold\">\r\n                              Weather Alert System\r\n                          </Typography>\r\n                      </Box>\r\n                      <Box sx={{ flexGrow: 1, display: \"flex\" }}>\r\n                          {navItems.map((item) => {\r\n                              const IconComponent =\r\n                                  iconMap[item.icon as keyof typeof iconMap];\r\n\r\n                              return (\r\n                                  <Button\r\n                                      key={item.name}\r\n                                      component={RouterLink}\r\n                                      to={item.path}\r\n                                      color=\"inherit\"\r\n                                      sx={{\r\n                                          mx: 1,\r\n                                          fontWeight: isActive(item.path)\r\n                                              ? \"bold\"\r\n                                              : \"normal\",\r\n                                          borderBottom: isActive(item.path)\r\n                                              ? \"3px solid white\"\r\n                                              : \"none\",\r\n                                          borderRadius: 0,\r\n                                          py: 2,\r\n                                          \"&:hover\": {\r\n                                              backgroundColor:\r\n                                                  \"rgba(255, 255, 255, 0.1)\",\r\n                                          },\r\n                                      }}\r\n                                      startIcon={<IconComponent />}\r\n                                  >\r\n                                      {item.name}\r\n                                  </Button>\r\n                              );\r\n                          })}\r\n                      </Box>\r\n\r\n                      <Tooltip title=\"View source code\">\r\n                          <IconButton\r\n                              color=\"inherit\"\r\n                              aria-label=\"github\"\r\n                              component={Link}\r\n                              href=\"https://github.com/adarabadian/Tomorrow\"\r\n                              target=\"_blank\"\r\n                          >\r\n                              <GitHubIcon />\r\n                          </IconButton>\r\n                      </Tooltip>\r\n                  </>\r\n              )}\r\n          </Toolbar>\r\n      </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,MAAM,EACNC,OAAO,EACPC,UAAU,EACVC,MAAM,EACNC,GAAG,EACHC,UAAU,EACVC,OAAO,QACF,eAAe;AACtB,SAASC,IAAI,IAAIC,UAAU,QAAQ,kBAAkB;AACrD,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,iBAAiB,MAAM,mCAAmC;AACjE,OAAOC,WAAW,MAAM,6BAA6B;AACrD,OAAOC,UAAU,MAAM,4BAA4B;AACnD,SAASN,IAAI,QAAQ,eAAe;AACpC,OAAOO,IAAI,MAAM,uBAAuB;;AAExC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,OAAO,GAAG;EACd,UAAU,EAAET,QAAQ;EACpB,mBAAmB,EAAEC,iBAAiB;EACtC,aAAa,EAAEC;AACjB,CAAC;AAaD,MAAMQ,MAA6B,GAAGA,CAAC;EACrCC,QAAQ;EACRC,YAAY;EACZC,QAAQ;EACRC;AACF,CAAC,KAAK;EACJ,oBACIR,OAAA,CAAChB,MAAM;IACHyB,QAAQ,EAAC,QAAQ;IACjBC,SAAS,EAAE,CAAE;IACbC,KAAK,EAAC,SAAS;IACfC,EAAE,EAAE;MACAC,YAAY,EAAGC,CAAC,IAAK,aAAaA,CAAC,CAACC,OAAO,CAACC,OAAO,EAAE;MACrDC,eAAe,EACX;IACR,CAAE;IAAAC,QAAA,eAEFlB,OAAA,CAACf,OAAO;MAAAiC,QAAA,EACHb,QAAQ,gBACLL,OAAA,CAAAE,SAAA;QAAAgB,QAAA,gBACIlB,OAAA,CAACX;QACG;QAAA;UACA8B,EAAE;UACF,cAAW,aAAa;UACxBC,IAAI,EAAC,OAAO;UACZC,OAAO,EAAEf,YAAa;UACtBM,EAAE,EAAE;YAAEU,EAAE,EAAE;UAAE,CAAE;UAAAJ,QAAA,eAEdlB,OAAA,CAACP,QAAQ;YAAA8B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACb1B,OAAA,CAACZ,GAAG;UAACwB,EAAE,EAAE;YAAEe,OAAO,EAAE,MAAM;YAAEC,UAAU,EAAE;UAAS,CAAE;UAAAV,QAAA,gBAC/ClB,OAAA,CAACZ,GAAG;YACFyC,SAAS,EAAC,KAAK;YACfC,GAAG,EAAEhC,IAAK;YACViC,GAAG,EAAC,uBAAuB;YAC3BnB,EAAE,EAAE;cAAEoB,MAAM,EAAE,EAAE;cAAEV,EAAE,EAAE;YAAE;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B,CAAC,eACF1B,OAAA,CAACd,UAAU;YAAC+C,OAAO,EAAC,IAAI;YAACC,UAAU,EAAC,MAAM;YAAAhB,QAAA,EAAC;UAE3C;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ,CAAC;MAAA,eACR,CAAC,gBAEH1B,OAAA,CAAAE,SAAA;QAAAgB,QAAA,gBACIlB,OAAA,CAACZ,GAAG;UACAwB,EAAE,EAAE;YAAEe,OAAO,EAAE,MAAM;YAAEC,UAAU,EAAE,QAAQ;YAAEN,EAAE,EAAE;UAAE,CAAE;UAAAJ,QAAA,gBAErDlB,OAAA,CAACZ,GAAG;YACFyC,SAAS,EAAC,KAAK;YACfC,GAAG,EAAEhC,IAAK;YACViC,GAAG,EAAC,uBAAuB;YAC3BnB,EAAE,EAAE;cAAEoB,MAAM,EAAE,EAAE;cAAEV,EAAE,EAAE;YAAE;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B,CAAC,eACF1B,OAAA,CAACd,UAAU;YAAC+C,OAAO,EAAC,IAAI;YAACC,UAAU,EAAC,MAAM;YAAAhB,QAAA,EAAC;UAE3C;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ,CAAC,eACN1B,OAAA,CAACZ,GAAG;UAACwB,EAAE,EAAE;YAAEuB,QAAQ,EAAE,CAAC;YAAER,OAAO,EAAE;UAAO,CAAE;UAAAT,QAAA,EACrCX,QAAQ,CAAC6B,GAAG,CAAEC,IAAI,IAAK;YACpB,MAAMC,aAAa,GACfnC,OAAO,CAACkC,IAAI,CAACE,IAAI,CAAyB;YAE9C,oBACIvC,OAAA,CAACb,MAAM;cAEH0C,SAAS,EAAErC,UAAW;cACtBgD,EAAE,EAAEH,IAAI,CAACI,IAAK;cACd9B,KAAK,EAAC,SAAS;cACfC,EAAE,EAAE;gBACA8B,EAAE,EAAE,CAAC;gBACLR,UAAU,EAAE1B,QAAQ,CAAC6B,IAAI,CAACI,IAAI,CAAC,GACzB,MAAM,GACN,QAAQ;gBACd5B,YAAY,EAAEL,QAAQ,CAAC6B,IAAI,CAACI,IAAI,CAAC,GAC3B,iBAAiB,GACjB,MAAM;gBACZE,YAAY,EAAE,CAAC;gBACfC,EAAE,EAAE,CAAC;gBACL,SAAS,EAAE;kBACPC,eAAe,EACX;gBACR;cACJ,CAAE;cACFC,SAAS,eAAE9C,OAAA,CAACsC,aAAa;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAE;cAAAR,QAAA,EAE5BmB,IAAI,CAACU;YAAI,GArBLV,IAAI,CAACU,IAAI;cAAAxB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAsBV,CAAC;UAEjB,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eAEN1B,OAAA,CAACV,OAAO;UAAC0D,KAAK,EAAC,kBAAkB;UAAA9B,QAAA,eAC7BlB,OAAA,CAACX,UAAU;YACPsB,KAAK,EAAC,SAAS;YACf,cAAW,QAAQ;YACnBkB,SAAS,EAAEtC,IAAK;YAChB0D,IAAI,EAAC,yCAAyC;YAC9CC,MAAM,EAAC,QAAQ;YAAAhC,QAAA,eAEflB,OAAA,CAACH,UAAU;cAAA0B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;MAAA,eACZ;IACL;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEf,CAAC;AAACyB,EAAA,GA3GI/C,MAA6B;AA6GnC,eAAeA,MAAM;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}