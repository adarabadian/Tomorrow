{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adara\\\\Desktop\\\\aaa\\\\Tomorrow\\\\frontend\\\\src\\\\components\\\\AlertParameters\\\\AlertParameters.tsx\";\nimport React from 'react';\nimport { Grid, FormControl, InputLabel, Select, MenuItem, Box, TextField } from '@mui/material';\nimport { PARAMETERS, CONDITIONS, getParameterUnit } from '../../utils/alertUtils';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AlertParameters = ({\n  parameter,\n  condition,\n  threshold,\n  onInputChange\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 4,\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Parameter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          name: \"parameter\",\n          value: parameter,\n          onChange: onInputChange,\n          label: \"Parameter\",\n          children: PARAMETERS.map(param => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: param.value,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: [param.icon, /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  ml: 1\n                },\n                children: param.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this)\n          }, param.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 4,\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Condition\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          name: \"condition\",\n          value: condition,\n          onChange: onInputChange,\n          label: \"Condition\",\n          children: CONDITIONS.map(condition => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: condition.value,\n            children: condition.label\n          }, condition.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 4,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: `Threshold (${getParameterUnit(parameter)})`,\n        name: \"threshold\",\n        type: \"number\",\n        value: threshold,\n        onChange: onInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = AlertParameters;\nexport default AlertParameters;\nvar _c;\n$RefreshReg$(_c, \"AlertParameters\");","map":{"version":3,"names":["React","Grid","FormControl","InputLabel","Select","MenuItem","Box","TextField","PARAMETERS","CONDITIONS","getParameterUnit","jsxDEV","_jsxDEV","Fragment","_Fragment","AlertParameters","parameter","condition","threshold","onInputChange","children","item","xs","md","fullWidth","required","fileName","_jsxFileName","lineNumber","columnNumber","name","value","onChange","label","map","param","sx","display","alignItems","icon","ml","type","_c","$RefreshReg$"],"sources":["C:/Users/adara/Desktop/aaa/Tomorrow/frontend/src/components/AlertParameters/AlertParameters.tsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Grid,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Box,\r\n  TextField\r\n} from '@mui/material';\r\nimport { PARAMETERS, CONDITIONS, getParameterUnit } from '../../utils/alertUtils';\r\n\r\ninterface AlertParametersProps {\r\n  parameter: string;\r\n  condition: string;\r\n  threshold: number;\r\n  onInputChange: (e: React.ChangeEvent<{ name?: string; value: unknown }>) => void;\r\n}\r\n\r\nconst AlertParameters: React.FC<AlertParametersProps> = ({\r\n  parameter,\r\n  condition,\r\n  threshold,\r\n  onInputChange\r\n}) => {\r\n  return (\r\n    <>\r\n      <Grid item xs={12} md={4}>\r\n        <FormControl fullWidth required>\r\n          <InputLabel>Parameter</InputLabel>\r\n          <Select\r\n            name=\"parameter\"\r\n            value={parameter}\r\n            onChange={onInputChange as any}\r\n            label=\"Parameter\"\r\n          >\r\n            {PARAMETERS.map((param) => (\r\n              <MenuItem key={param.value} value={param.value}>\r\n                <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                  {param.icon}\r\n                  <Box sx={{ ml: 1 }}>{param.label}</Box>\r\n                </Box>\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      \r\n      <Grid item xs={12} md={4}>\r\n        <FormControl fullWidth required>\r\n          <InputLabel>Condition</InputLabel>\r\n          <Select\r\n            name=\"condition\"\r\n            value={condition}\r\n            onChange={onInputChange as any}\r\n            label=\"Condition\"\r\n          >\r\n            {CONDITIONS.map((condition) => (\r\n              <MenuItem key={condition.value} value={condition.value}>\r\n                {condition.label}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      \r\n      <Grid item xs={12} md={4}>\r\n        <TextField\r\n          fullWidth\r\n          label={`Threshold (${getParameterUnit(parameter)})`}\r\n          name=\"threshold\"\r\n          type=\"number\"\r\n          value={threshold}\r\n          onChange={onInputChange}\r\n          required\r\n        />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AlertParameters; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}