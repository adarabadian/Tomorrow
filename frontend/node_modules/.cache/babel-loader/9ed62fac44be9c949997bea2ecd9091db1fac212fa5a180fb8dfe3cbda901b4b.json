{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adara\\\\Desktop\\\\aaa\\\\Tomorrow\\\\frontend\\\\src\\\\components\\\\LocationSearchInput.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Autocomplete, CircularProgress, Typography, ListItem, ListItemText, Avatar } from '@mui/material';\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\nimport { searchLocations } from '../services/locationService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LocationSearchInput = ({\n  label = \"Location\",\n  value,\n  onChange,\n  error,\n  helperText,\n  required\n}) => {\n  _s();\n  const [inputValue, setInputValue] = useState(value);\n  const [options, setOptions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchTimeout, setSearchTimeout] = useState(null);\n  useEffect(() => {\n    return () => {\n      if (searchTimeout) clearTimeout(searchTimeout);\n    };\n  }, [searchTimeout]);\n\n  // Handle input change with debounce\n  const handleInputChange = (event, newInputValue) => {\n    setInputValue(newInputValue);\n    if (searchTimeout) clearTimeout(searchTimeout);\n    if (newInputValue && newInputValue.length > 2) {\n      setLoading(true);\n\n      // Debounce search to avoid too many API calls\n      const timeout = setTimeout(async () => {\n        try {\n          const results = await searchLocations(newInputValue);\n          setOptions(results);\n        } catch (error) {\n          console.error(\"Failed to search locations\", error);\n          setOptions([]);\n        } finally {\n          setLoading(false);\n        }\n      }, 500);\n      setSearchTimeout(timeout);\n    } else {\n      setOptions([]);\n      setLoading(false);\n    }\n  };\n  const handleChange = (event, newValue) => {\n    if (newValue) {\n      // Pass the location with coordinates to the parent component\n      onChange({\n        city: newValue.name,\n        coordinates: newValue.coordinates\n      });\n      setInputValue(newValue.displayName);\n    } else {\n      // Reset if nothing selected\n      onChange({\n        city: ''\n      });\n      setInputValue('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    id: \"location-search\",\n    options: options,\n    getOptionLabel: option => option.displayName || '',\n    filterOptions: x => x // Don't filter the suggestions, we already get filtered results from API\n    ,\n    onInputChange: handleInputChange,\n    onChange: handleChange,\n    inputValue: inputValue,\n    loading: loading,\n    loadingText: \"Searching locations...\",\n    noOptionsText: inputValue.length > 2 ? \"No locations found\" : \"Type at least 3 characters to search\",\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n      ...params,\n      label: label,\n      required: required,\n      error: error,\n      helperText: helperText,\n      InputProps: {\n        ...params.InputProps,\n        endAdornment: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            color: \"inherit\",\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 28\n          }, this) : null, params.InputProps.endAdornment]\n        }, void 0, true)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this),\n    renderOption: (props, option) => /*#__PURE__*/_jsxDEV(ListItem, {\n      ...props,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        sx: {\n          mr: 2,\n          bgcolor: 'primary.light'\n        },\n        children: /*#__PURE__*/_jsxDEV(LocationOnIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: option.name,\n        secondary: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: [option.state ? `${option.state}, ` : '', option.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(LocationSearchInput, \"LJG+kPDO1i0HSsEol5wFU0mQAg0=\");\n_c = LocationSearchInput;\nexport default LocationSearchInput;\nvar _c;\n$RefreshReg$(_c, \"LocationSearchInput\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Autocomplete","CircularProgress","Typography","ListItem","ListItemText","Avatar","LocationOnIcon","searchLocations","jsxDEV","_jsxDEV","Fragment","_Fragment","LocationSearchInput","label","value","onChange","error","helperText","required","_s","inputValue","setInputValue","options","setOptions","loading","setLoading","searchTimeout","setSearchTimeout","clearTimeout","handleInputChange","event","newInputValue","length","timeout","setTimeout","results","console","handleChange","newValue","city","name","coordinates","displayName","id","getOptionLabel","option","filterOptions","x","onInputChange","loadingText","noOptionsText","renderInput","params","InputProps","endAdornment","children","color","size","fileName","_jsxFileName","lineNumber","columnNumber","renderOption","props","sx","mr","bgcolor","primary","secondary","variant","state","country","_c","$RefreshReg$"],"sources":["C:/Users/adara/Desktop/aaa/Tomorrow/frontend/src/components/LocationSearchInput.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  TextField,\r\n  Autocomplete,\r\n  CircularProgress,\r\n  Box,\r\n  Typography,\r\n  ListItem,\r\n  ListItemText,\r\n  Avatar\r\n} from '@mui/material';\r\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\r\nimport { searchLocations, LocationSearchResult } from '../services/locationService';\r\n\r\ninterface LocationSearchInputProps {\r\n  label?: string;\r\n  value: string;\r\n  onChange: (location: { \r\n    city?: string;\r\n    coordinates?: { lat: number; lon: number }\r\n  }) => void;\r\n  error?: boolean;\r\n  helperText?: string;\r\n  required?: boolean;\r\n}\r\n\r\nconst LocationSearchInput: React.FC<LocationSearchInputProps> = ({\r\n  label = \"Location\",\r\n  value,\r\n  onChange,\r\n  error,\r\n  helperText,\r\n  required\r\n}) => {\r\n  const [inputValue, setInputValue] = useState<string>(value);\r\n  const [options, setOptions] = useState<LocationSearchResult[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [searchTimeout, setSearchTimeout] = useState<NodeJS.Timeout | null>(null);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (searchTimeout) clearTimeout(searchTimeout);\r\n    };\r\n  }, [searchTimeout]);\r\n\r\n  // Handle input change with debounce\r\n  const handleInputChange = (event: React.SyntheticEvent, newInputValue: string) => {\r\n    setInputValue(newInputValue);\r\n    \r\n    if (searchTimeout) clearTimeout(searchTimeout);\r\n    \r\n    if (newInputValue && newInputValue.length > 2) {\r\n      setLoading(true);\r\n      \r\n      // Debounce search to avoid too many API calls\r\n      const timeout = setTimeout(async () => {\r\n        try {\r\n          const results = await searchLocations(newInputValue);\r\n          setOptions(results);\r\n        } catch (error) {\r\n          console.error(\"Failed to search locations\", error);\r\n          setOptions([]);\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      }, 500);\r\n      \r\n      setSearchTimeout(timeout);\r\n    } else {\r\n      setOptions([]);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event: React.SyntheticEvent, newValue: LocationSearchResult | null) => {\r\n    if (newValue) {\r\n      // Pass the location with coordinates to the parent component\r\n      onChange({\r\n        city: newValue.name,\r\n        coordinates: newValue.coordinates\r\n      });\r\n      setInputValue(newValue.displayName);\r\n    } else {\r\n      // Reset if nothing selected\r\n      onChange({ city: '' });\r\n      setInputValue('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"location-search\"\r\n      options={options}\r\n      getOptionLabel={(option) => option.displayName || ''}\r\n      filterOptions={(x) => x} // Don't filter the suggestions, we already get filtered results from API\r\n      onInputChange={handleInputChange}\r\n      onChange={handleChange}\r\n      inputValue={inputValue}\r\n      loading={loading}\r\n      loadingText=\"Searching locations...\"\r\n      noOptionsText={inputValue.length > 2 ? \"No locations found\" : \"Type at least 3 characters to search\"}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          label={label}\r\n          required={required}\r\n          error={error}\r\n          helperText={helperText}\r\n          InputProps={{\r\n            ...params.InputProps,\r\n            endAdornment: (\r\n              <>\r\n                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                {params.InputProps.endAdornment}\r\n              </>\r\n            ),\r\n          }}\r\n        />\r\n      )}\r\n      renderOption={(props, option) => (\r\n        <ListItem {...props}>\r\n          <Avatar sx={{ mr: 2, bgcolor: 'primary.light' }}>\r\n            <LocationOnIcon />\r\n          </Avatar>\r\n          <ListItemText\r\n            primary={option.name}\r\n            secondary={\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                {option.state ? `${option.state}, ` : ''}\r\n                {option.country}\r\n              </Typography>\r\n            }\r\n          />\r\n        </ListItem>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LocationSearchInput; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,SAAS,EACTC,YAAY,EACZC,gBAAgB,EAEhBC,UAAU,EACVC,QAAQ,EACRC,YAAY,EACZC,MAAM,QACD,eAAe;AACtB,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,SAASC,eAAe,QAA8B,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAcpF,MAAMC,mBAAuD,GAAGA,CAAC;EAC/DC,KAAK,GAAG,UAAU;EAClBC,KAAK;EACLC,QAAQ;EACRC,KAAK;EACLC,UAAU;EACVC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGxB,QAAQ,CAASiB,KAAK,CAAC;EAC3D,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAG1B,QAAQ,CAAyB,EAAE,CAAC;EAClE,MAAM,CAAC2B,OAAO,EAAEC,UAAU,CAAC,GAAG5B,QAAQ,CAAU,KAAK,CAAC;EACtD,MAAM,CAAC6B,aAAa,EAAEC,gBAAgB,CAAC,GAAG9B,QAAQ,CAAwB,IAAI,CAAC;EAE/EC,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACX,IAAI4B,aAAa,EAAEE,YAAY,CAACF,aAAa,CAAC;IAChD,CAAC;EACH,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;;EAEnB;EACA,MAAMG,iBAAiB,GAAGA,CAACC,KAA2B,EAAEC,aAAqB,KAAK;IAChFV,aAAa,CAACU,aAAa,CAAC;IAE5B,IAAIL,aAAa,EAAEE,YAAY,CAACF,aAAa,CAAC;IAE9C,IAAIK,aAAa,IAAIA,aAAa,CAACC,MAAM,GAAG,CAAC,EAAE;MAC7CP,UAAU,CAAC,IAAI,CAAC;;MAEhB;MACA,MAAMQ,OAAO,GAAGC,UAAU,CAAC,YAAY;QACrC,IAAI;UACF,MAAMC,OAAO,GAAG,MAAM5B,eAAe,CAACwB,aAAa,CAAC;UACpDR,UAAU,CAACY,OAAO,CAAC;QACrB,CAAC,CAAC,OAAOnB,KAAK,EAAE;UACdoB,OAAO,CAACpB,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;UAClDO,UAAU,CAAC,EAAE,CAAC;QAChB,CAAC,SAAS;UACRE,UAAU,CAAC,KAAK,CAAC;QACnB;MACF,CAAC,EAAE,GAAG,CAAC;MAEPE,gBAAgB,CAACM,OAAO,CAAC;IAC3B,CAAC,MAAM;MACLV,UAAU,CAAC,EAAE,CAAC;MACdE,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMY,YAAY,GAAGA,CAACP,KAA2B,EAAEQ,QAAqC,KAAK;IAC3F,IAAIA,QAAQ,EAAE;MACZ;MACAvB,QAAQ,CAAC;QACPwB,IAAI,EAAED,QAAQ,CAACE,IAAI;QACnBC,WAAW,EAAEH,QAAQ,CAACG;MACxB,CAAC,CAAC;MACFpB,aAAa,CAACiB,QAAQ,CAACI,WAAW,CAAC;IACrC,CAAC,MAAM;MACL;MACA3B,QAAQ,CAAC;QAAEwB,IAAI,EAAE;MAAG,CAAC,CAAC;MACtBlB,aAAa,CAAC,EAAE,CAAC;IACnB;EACF,CAAC;EAED,oBACEZ,OAAA,CAACT,YAAY;IACX2C,EAAE,EAAC,iBAAiB;IACpBrB,OAAO,EAAEA,OAAQ;IACjBsB,cAAc,EAAGC,MAAM,IAAKA,MAAM,CAACH,WAAW,IAAI,EAAG;IACrDI,aAAa,EAAGC,CAAC,IAAKA,CAAE,CAAC;IAAA;IACzBC,aAAa,EAAEnB,iBAAkB;IACjCd,QAAQ,EAAEsB,YAAa;IACvBjB,UAAU,EAAEA,UAAW;IACvBI,OAAO,EAAEA,OAAQ;IACjByB,WAAW,EAAC,wBAAwB;IACpCC,aAAa,EAAE9B,UAAU,CAACY,MAAM,GAAG,CAAC,GAAG,oBAAoB,GAAG,sCAAuC;IACrGmB,WAAW,EAAGC,MAAM,iBAClB3C,OAAA,CAACV,SAAS;MAAA,GACJqD,MAAM;MACVvC,KAAK,EAAEA,KAAM;MACbK,QAAQ,EAAEA,QAAS;MACnBF,KAAK,EAAEA,KAAM;MACbC,UAAU,EAAEA,UAAW;MACvBoC,UAAU,EAAE;QACV,GAAGD,MAAM,CAACC,UAAU;QACpBC,YAAY,eACV7C,OAAA,CAAAE,SAAA;UAAA4C,QAAA,GACG/B,OAAO,gBAAGf,OAAA,CAACR,gBAAgB;YAACuD,KAAK,EAAC,SAAS;YAACC,IAAI,EAAE;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,GAAG,IAAI,EAC/DT,MAAM,CAACC,UAAU,CAACC,YAAY;QAAA,eAC/B;MAEN;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACD;IACFC,YAAY,EAAEA,CAACC,KAAK,EAAElB,MAAM,kBAC1BpC,OAAA,CAACN,QAAQ;MAAA,GAAK4D,KAAK;MAAAR,QAAA,gBACjB9C,OAAA,CAACJ,MAAM;QAAC2D,EAAE,EAAE;UAAEC,EAAE,EAAE,CAAC;UAAEC,OAAO,EAAE;QAAgB,CAAE;QAAAX,QAAA,eAC9C9C,OAAA,CAACH,cAAc;UAAAoD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,eACTpD,OAAA,CAACL,YAAY;QACX+D,OAAO,EAAEtB,MAAM,CAACL,IAAK;QACrB4B,SAAS,eACP3D,OAAA,CAACP,UAAU;UAACmE,OAAO,EAAC,OAAO;UAACb,KAAK,EAAC,gBAAgB;UAAAD,QAAA,GAC/CV,MAAM,CAACyB,KAAK,GAAG,GAAGzB,MAAM,CAACyB,KAAK,IAAI,GAAG,EAAE,EACvCzB,MAAM,CAAC0B,OAAO;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MACb;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM;EACV;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN,CAAC;AAAC1C,EAAA,CA/GIP,mBAAuD;AAAA4D,EAAA,GAAvD5D,mBAAuD;AAiH7D,eAAeA,mBAAmB;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}