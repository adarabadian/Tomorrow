{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adara\\\\Desktop\\\\aaa\\\\Tomorrow\\\\frontend\\\\src\\\\components\\\\AlertList\\\\AlertStatusList.tsx\";\nimport React from 'react';\nimport { Paper, Typography, List, Card, CardContent, Box, Avatar } from '@mui/material';\nimport WarningIcon from '@mui/icons-material/Warning';\nimport { getParameterIcon, formatCondition, getParameterName, getParameterUnit } from '../../utils/alertUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AlertStatusList = ({\n  alerts,\n  title,\n  icon = /*#__PURE__*/_jsxDEV(WarningIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this),\n  borderColor = '#f44336',\n  backgroundColor = 'rgba(244, 67, 54, 0.05)',\n  emptyMessage = 'No alerts in this category'\n}) => {\n  if (alerts.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    sx: {\n      p: 2,\n      mb: 3,\n      borderLeft: `4px solid ${borderColor}`\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      sx: {\n        mb: 2,\n        color: borderColor,\n        display: 'flex',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/React.cloneElement(icon, {\n        sx: {\n          mr: 1\n        }\n      }), title, \" (\", alerts.length, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: alerts.map(alert => {\n        var _alert$lastValue;\n        return /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            mb: 2,\n            backgroundColor\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                  sx: {\n                    bgcolor: borderColor,\n                    mr: 2\n                  },\n                  children: getParameterIcon(alert.parameter)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    children: alert.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: [getParameterName(alert.parameter), \" \", formatCondition(alert.parameter, alert.condition, alert.threshold)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 21\n                  }, this), alert.location && /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: [\"Location: \", alert.resolvedLocation || (alert.location.city ? alert.location.city : alert.location.coordinates ? `${alert.location.coordinates.lat.toFixed(2)}, ${alert.location.coordinates.lon.toFixed(2)}` : 'Unknown')]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 23\n                  }, this), alert.lastValue !== undefined && /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: [\"Current value: \", (_alert$lastValue = alert.lastValue) === null || _alert$lastValue === void 0 ? void 0 : _alert$lastValue.toFixed(2), \" \", getParameterUnit(alert.parameter)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, alert.id || alert._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_c = AlertStatusList;\nexport default AlertStatusList;\nvar _c;\n$RefreshReg$(_c, \"AlertStatusList\");","map":{"version":3,"names":["React","Paper","Typography","List","Card","CardContent","Box","Avatar","WarningIcon","getParameterIcon","formatCondition","getParameterName","getParameterUnit","jsxDEV","_jsxDEV","AlertStatusList","alerts","title","icon","fileName","_jsxFileName","lineNumber","columnNumber","borderColor","backgroundColor","emptyMessage","length","elevation","sx","p","mb","borderLeft","children","variant","color","display","alignItems","cloneElement","mr","map","alert","_alert$lastValue","justifyContent","bgcolor","parameter","name","condition","threshold","location","resolvedLocation","city","coordinates","lat","toFixed","lon","lastValue","undefined","id","_id","_c","$RefreshReg$"],"sources":["C:/Users/adara/Desktop/aaa/Tomorrow/frontend/src/components/AlertList/AlertStatusList.tsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Paper,\r\n  Typography,\r\n  List,\r\n  Card,\r\n  CardContent,\r\n  Box,\r\n  Avatar\r\n} from '@mui/material';\r\nimport WarningIcon from '@mui/icons-material/Warning';\r\nimport { Alert } from '../../types/alert';\r\nimport { getParameterIcon, formatCondition, getParameterName, getParameterUnit } from '../../utils/alertUtils';\r\n\r\ninterface AlertStatusListProps {\r\n  alerts: Alert[];\r\n  title: string;\r\n  icon?: React.ReactElement;\r\n  borderColor?: string;\r\n  backgroundColor?: string;\r\n  emptyMessage?: string;\r\n}\r\n\r\nconst AlertStatusList: React.FC<AlertStatusListProps> = ({\r\n  alerts,\r\n  title,\r\n  icon = <WarningIcon />,\r\n  borderColor = '#f44336',\r\n  backgroundColor = 'rgba(244, 67, 54, 0.05)',\r\n  emptyMessage = 'No alerts in this category'\r\n}) => {\r\n  if (alerts.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Paper elevation={3} sx={{ p: 2, mb: 3, borderLeft: `4px solid ${borderColor}` }}>\r\n      <Typography \r\n        variant=\"h6\" \r\n        sx={{ \r\n          mb: 2, \r\n          color: borderColor, \r\n          display: 'flex', \r\n          alignItems: 'center' \r\n        }}\r\n      >\r\n        {React.cloneElement(icon, { sx: { mr: 1 } })}\r\n        {title} ({alerts.length})\r\n      </Typography>\r\n      \r\n      <List>\r\n        {alerts.map((alert: Alert) => (\r\n          <Card \r\n            key={alert.id || alert._id} \r\n            sx={{ \r\n              mb: 2, \r\n              backgroundColor \r\n            }}\r\n          >\r\n            <CardContent>\r\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                  <Avatar \r\n                    sx={{ \r\n                      bgcolor: borderColor, \r\n                      mr: 2 \r\n                    }}\r\n                  >\r\n                    {getParameterIcon(alert.parameter)}\r\n                  </Avatar>\r\n                  <Box>\r\n                    <Typography variant=\"h6\">{alert.name}</Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      {getParameterName(alert.parameter)} {formatCondition(alert.parameter, alert.condition, alert.threshold)}\r\n                    </Typography>\r\n                    {alert.location && (\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        Location: {alert.resolvedLocation || \r\n                          (alert.location.city ? alert.location.city : \r\n                            (alert.location.coordinates ? \r\n                              `${alert.location.coordinates.lat.toFixed(2)}, ${alert.location.coordinates.lon.toFixed(2)}` : \r\n                              'Unknown')\r\n                          )\r\n                        }\r\n                      </Typography>\r\n                    )}\r\n                    {alert.lastValue !== undefined && (\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        Current value: {alert.lastValue?.toFixed(2)} {getParameterUnit(alert.parameter)}\r\n                      </Typography>\r\n                    )}\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        ))}\r\n      </List>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default AlertStatusList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}