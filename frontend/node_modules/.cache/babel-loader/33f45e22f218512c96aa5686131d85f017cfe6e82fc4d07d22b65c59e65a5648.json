{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adara\\\\Desktop\\\\aaa\\\\Tomorrow\\\\frontend\\\\src\\\\pages\\\\Alerts.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\nimport { Box, Typography } from '@mui/material';\nimport { createAlert, deleteAlert, updateAlert } from '../services/alertService';\nimport { useAlerts } from '../contexts/AlertsContext';\n// Import our components\nimport AlertForm from '../components/AlertForm/AlertForm';\nimport AlertList from '../components/AlertList/AlertList';\nimport AlertEditForm from '../components/AlertEditForm/AlertEditForm';\nimport Notifications from '../components/Notifications/Notifications';\nimport AlertFilters from '../components/AlertFilters/AlertFilters';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Alerts = () => {\n  _s();\n  const {\n    alerts,\n    loading,\n    error,\n    refreshAlerts\n  } = useAlerts();\n\n  // State for UI feedback\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [alertToEdit, setAlertToEdit] = useState(null);\n\n  // State for filters\n  const [filters, setFilters] = useState({\n    search: '',\n    status: [],\n    parameters: []\n  });\n\n  // Filter alerts based on selected filters\n  const filteredAlerts = useMemo(() => {\n    return alerts.filter(alert => {\n      // Text search filter\n      const searchLower = filters.search.toLowerCase();\n      const matchesSearch = !filters.search || alert.name.toLowerCase().includes(searchLower) || alert.resolvedLocation && alert.resolvedLocation.toLowerCase().includes(searchLower) || alert.location.city && alert.location.city.toLowerCase().includes(searchLower);\n\n      // Status filter\n      const matchesStatus = filters.status.length === 0 || filters.status.includes(alert.isTriggered ? 'active' : 'inactive');\n\n      // Parameter filter\n      const matchesParameter = filters.parameters.length === 0 || filters.parameters.includes(alert.parameter);\n      return matchesSearch && matchesStatus && matchesParameter;\n    });\n  }, [alerts, filters]);\n\n  // Handle filter changes\n  const handleFilterChange = newFilters => {\n    setFilters(newFilters);\n  };\n\n  // Handle alert creation\n  const handleCreateAlert = async alertData => {\n    try {\n      const createdAlert = await createAlert(alertData);\n      setSuccessMessage(`Alert for ${createdAlert.resolvedLocation || alertData.location.city || 'your location'} created successfully!`);\n      refreshAlerts();\n      return Promise.resolve();\n    } catch (err) {\n      const errorMessage = err.message || 'Failed to create alert';\n      setErrorMessage(errorMessage);\n      return Promise.reject(err);\n    }\n  };\n\n  // Edit an alert - called from AlertList\n  const handleEditAlert = async id => {\n    const alertToEdit = alerts.find(alert => alert.id === id || alert._id === id);\n    if (alertToEdit) {\n      setAlertToEdit(alertToEdit);\n      setEditDialogOpen(true);\n    }\n    return Promise.resolve();\n  };\n\n  // Handle alert update submission\n  const handleUpdateAlert = async (id, updatedData) => {\n    try {\n      await updateAlert(id, updatedData);\n      setSuccessMessage('Alert updated successfully!');\n      await refreshAlerts();\n    } catch (err) {\n      const errorMessage = err.message || 'Failed to update alert';\n      setErrorMessage(errorMessage);\n    }\n  };\n\n  // Delete an alert - returns a Promise for the AlertList component\n  const handleDeleteAlert = async id => {\n    try {\n      await deleteAlert(id);\n      setSuccessMessage('Alert deleted successfully!');\n      await refreshAlerts();\n      return Promise.resolve();\n    } catch (err) {\n      setErrorMessage('Failed to delete alert');\n      return Promise.reject(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Weather Alerts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AlertForm, {\n      onSubmit: handleCreateAlert,\n      onSuccess: () => {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AlertFilters, {\n      filters: filters,\n      onFilterChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AlertList, {\n      alerts: filteredAlerts,\n      loading: loading,\n      error: error,\n      onDelete: handleDeleteAlert,\n      onEdit: handleEditAlert,\n      onRefresh: refreshAlerts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), alertToEdit && /*#__PURE__*/_jsxDEV(AlertEditForm, {\n      alert: alertToEdit,\n      open: editDialogOpen,\n      onClose: () => {\n        setEditDialogOpen(false);\n        setAlertToEdit(null);\n      },\n      onSubmit: handleUpdateAlert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Notifications, {\n      successMessage: successMessage,\n      errorMessage: errorMessage,\n      onClearSuccess: () => setSuccessMessage(null),\n      onClearError: () => setErrorMessage(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(Alerts, \"ch+iSLK7uA7Dm4i3C8Z86qa78OA=\", false, function () {\n  return [useAlerts];\n});\n_c = Alerts;\nexport default Alerts;\nvar _c;\n$RefreshReg$(_c, \"Alerts\");","map":{"version":3,"names":["React","useState","useMemo","Box","Typography","createAlert","deleteAlert","updateAlert","useAlerts","AlertForm","AlertList","AlertEditForm","Notifications","AlertFilters","jsxDEV","_jsxDEV","Alerts","_s","alerts","loading","error","refreshAlerts","successMessage","setSuccessMessage","errorMessage","setErrorMessage","editDialogOpen","setEditDialogOpen","alertToEdit","setAlertToEdit","filters","setFilters","search","status","parameters","filteredAlerts","filter","alert","searchLower","toLowerCase","matchesSearch","name","includes","resolvedLocation","location","city","matchesStatus","length","isTriggered","matchesParameter","parameter","handleFilterChange","newFilters","handleCreateAlert","alertData","createdAlert","Promise","resolve","err","message","reject","handleEditAlert","id","find","_id","handleUpdateAlert","updatedData","handleDeleteAlert","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onSuccess","onFilterChange","onDelete","onEdit","onRefresh","open","onClose","onClearSuccess","onClearError","_c","$RefreshReg$"],"sources":["C:/Users/adara/Desktop/aaa/Tomorrow/frontend/src/pages/Alerts.tsx"],"sourcesContent":["import React, { useState, useMemo } from 'react';\r\nimport { Box, Typography } from '@mui/material';\r\nimport { createAlert, deleteAlert, updateAlert } from '../services/alertService';\r\nimport { useAlerts } from '../contexts/AlertsContext';\r\nimport { Alert } from '../types/alert';\r\n\r\n// Import our components\r\nimport AlertForm from '../components/AlertForm/AlertForm';\r\nimport AlertList from '../components/AlertList/AlertList';\r\nimport AlertEditForm from '../components/AlertEditForm/AlertEditForm';\r\nimport Notifications from '../components/Notifications/Notifications';\r\nimport AlertFilters, { AlertFilters as AlertFiltersType } from '../components/AlertFilters/AlertFilters';\r\n\r\nconst Alerts: React.FC = () => {\r\n  const { alerts, loading, error, refreshAlerts } = useAlerts();\r\n  \r\n  // State for UI feedback\r\n  const [successMessage, setSuccessMessage] = useState<string | null>(null);\r\n  const [errorMessage, setErrorMessage] = useState<string | null>(null);\r\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\r\n  const [alertToEdit, setAlertToEdit] = useState<Alert | null>(null);\r\n  \r\n  // State for filters\r\n  const [filters, setFilters] = useState<AlertFiltersType>({\r\n    search: '',\r\n    status: [],\r\n    parameters: []\r\n  });\r\n\r\n  // Filter alerts based on selected filters\r\n  const filteredAlerts = useMemo(() => {\r\n    return alerts.filter(alert => {\r\n      // Text search filter\r\n      const searchLower = filters.search.toLowerCase();\r\n      const matchesSearch = !filters.search || \r\n        alert.name.toLowerCase().includes(searchLower) || \r\n        (alert.resolvedLocation && alert.resolvedLocation.toLowerCase().includes(searchLower)) ||\r\n        (alert.location.city && alert.location.city.toLowerCase().includes(searchLower));\r\n      \r\n      // Status filter\r\n      const matchesStatus = filters.status.length === 0 || \r\n        filters.status.includes(alert.isTriggered ? 'active' : 'inactive');\r\n      \r\n      // Parameter filter\r\n      const matchesParameter = filters.parameters.length === 0 || \r\n        filters.parameters.includes(alert.parameter);\r\n      \r\n      return matchesSearch && matchesStatus && matchesParameter;\r\n    });\r\n  }, [alerts, filters]);\r\n\r\n  // Handle filter changes\r\n  const handleFilterChange = (newFilters: AlertFiltersType) => {\r\n    setFilters(newFilters);\r\n  };\r\n\r\n  // Handle alert creation\r\n  const handleCreateAlert = async (alertData: any) => {\r\n    try {\r\n      const createdAlert = await createAlert(alertData);\r\n      setSuccessMessage(`Alert for ${createdAlert.resolvedLocation || alertData.location.city || 'your location'} created successfully!`);\r\n      refreshAlerts();\r\n      return Promise.resolve();\r\n    } catch (err: any) {\r\n      const errorMessage = err.message || 'Failed to create alert';\r\n      setErrorMessage(errorMessage);\r\n      return Promise.reject(err);\r\n    }\r\n  };\r\n\r\n  // Edit an alert - called from AlertList\r\n  const handleEditAlert = async (id: string): Promise<void> => {\r\n    const alertToEdit = alerts.find(alert => alert.id === id || alert._id === id);\r\n    if (alertToEdit) {\r\n      setAlertToEdit(alertToEdit);\r\n      setEditDialogOpen(true);\r\n    }\r\n    return Promise.resolve();\r\n  };\r\n\r\n  // Handle alert update submission\r\n  const handleUpdateAlert = async (id: string, updatedData: Partial<Alert>): Promise<void> => {\r\n    try {\r\n      await updateAlert(id, updatedData);\r\n      setSuccessMessage('Alert updated successfully!');\r\n      await refreshAlerts();\r\n    } catch (err: any) {\r\n      const errorMessage = err.message || 'Failed to update alert';\r\n      setErrorMessage(errorMessage);\r\n    }\r\n  };\r\n\r\n  // Delete an alert - returns a Promise for the AlertList component\r\n  const handleDeleteAlert = async (id: string): Promise<void> => {\r\n    try {\r\n      await deleteAlert(id);\r\n      setSuccessMessage('Alert deleted successfully!');\r\n      await refreshAlerts();\r\n      return Promise.resolve();\r\n    } catch (err) {\r\n      setErrorMessage('Failed to delete alert');\r\n      return Promise.reject(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Weather Alerts\r\n      </Typography>\r\n      \r\n      {/* Alert Creation Form */}\r\n      <AlertForm \r\n        onSubmit={handleCreateAlert}\r\n        onSuccess={() => {}}\r\n      />\r\n      \r\n      {/* Alert Filters */}\r\n      <AlertFilters \r\n        filters={filters}\r\n        onFilterChange={handleFilterChange}\r\n      />\r\n      \r\n      {/* Alert List */}\r\n      <AlertList \r\n        alerts={filteredAlerts}\r\n        loading={loading}\r\n        error={error}\r\n        onDelete={handleDeleteAlert}\r\n        onEdit={handleEditAlert}\r\n        onRefresh={refreshAlerts}\r\n      />\r\n      \r\n      {/* Edit Dialog */}\r\n      {alertToEdit && (\r\n        <AlertEditForm\r\n          alert={alertToEdit}\r\n          open={editDialogOpen}\r\n          onClose={() => {\r\n            setEditDialogOpen(false);\r\n            setAlertToEdit(null);\r\n          }}\r\n          onSubmit={handleUpdateAlert}\r\n        />\r\n      )}\r\n      \r\n      {/* Notifications */}\r\n      <Notifications \r\n        successMessage={successMessage}\r\n        errorMessage={errorMessage}\r\n        onClearSuccess={() => setSuccessMessage(null)}\r\n        onClearError={() => setErrorMessage(null)}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Alerts; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}