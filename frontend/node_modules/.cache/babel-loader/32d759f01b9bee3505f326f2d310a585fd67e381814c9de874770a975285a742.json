{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adara\\\\Desktop\\\\aaa\\\\Tomorrow\\\\frontend\\\\src\\\\components\\\\LoadingState\\\\LoadingState.tsx\";\nimport React from 'react';\nimport { Box, CircularProgress, Alert, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoadingState = ({\n  loading,\n  error,\n  isEmpty = false,\n  emptyMessage = 'No data available',\n  minHeight = '300px',\n  children\n}) => {\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: minHeight,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mt: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n  if (isEmpty) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: minHeight,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"text.secondary\",\n        variant: \"body1\",\n        children: emptyMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n_c = LoadingState;\nexport default LoadingState;\nvar _c;\n$RefreshReg$(_c, \"LoadingState\");","map":{"version":3,"names":["React","Box","CircularProgress","Alert","Typography","jsxDEV","_jsxDEV","Fragment","_Fragment","LoadingState","loading","error","isEmpty","emptyMessage","minHeight","children","display","justifyContent","alignItems","fileName","_jsxFileName","lineNumber","columnNumber","severity","sx","mt","color","variant","_c","$RefreshReg$"],"sources":["C:/Users/adara/Desktop/aaa/Tomorrow/frontend/src/components/LoadingState/LoadingState.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Box, CircularProgress, Alert, Typography } from '@mui/material';\r\n\r\ninterface LoadingStateProps {\r\n  loading: boolean;\r\n  error: string | null;\r\n  isEmpty?: boolean;\r\n  emptyMessage?: string;\r\n  minHeight?: string | number;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst LoadingState: React.FC<LoadingStateProps> = ({\r\n  loading,\r\n  error,\r\n  isEmpty = false,\r\n  emptyMessage = 'No data available',\r\n  minHeight = '300px',\r\n  children\r\n}) => {\r\n  if (loading) {\r\n    return (\r\n      <Box \r\n        display=\"flex\" \r\n        justifyContent=\"center\" \r\n        alignItems=\"center\" \r\n        minHeight={minHeight}\r\n      >\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Alert severity=\"error\" sx={{ mt: 2 }}>\r\n        {error}\r\n      </Alert>\r\n    );\r\n  }\r\n\r\n  if (isEmpty) {\r\n    return (\r\n      <Box \r\n        display=\"flex\" \r\n        justifyContent=\"center\" \r\n        alignItems=\"center\" \r\n        minHeight={minHeight}\r\n      >\r\n        <Typography color=\"text.secondary\" variant=\"body1\">\r\n          {emptyMessage}\r\n        </Typography>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return <>{children}</>;\r\n};\r\n\r\nexport default LoadingState; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,gBAAgB,EAAEC,KAAK,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAWzE,MAAMC,YAAyC,GAAGA,CAAC;EACjDC,OAAO;EACPC,KAAK;EACLC,OAAO,GAAG,KAAK;EACfC,YAAY,GAAG,mBAAmB;EAClCC,SAAS,GAAG,OAAO;EACnBC;AACF,CAAC,KAAK;EACJ,IAAIL,OAAO,EAAE;IACX,oBACEJ,OAAA,CAACL,GAAG;MACFe,OAAO,EAAC,MAAM;MACdC,cAAc,EAAC,QAAQ;MACvBC,UAAU,EAAC,QAAQ;MACnBJ,SAAS,EAAEA,SAAU;MAAAC,QAAA,eAErBT,OAAA,CAACJ,gBAAgB;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAEV;EAEA,IAAIX,KAAK,EAAE;IACT,oBACEL,OAAA,CAACH,KAAK;MAACoB,QAAQ,EAAC,OAAO;MAACC,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAV,QAAA,EACnCJ;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAEZ;EAEA,IAAIV,OAAO,EAAE;IACX,oBACEN,OAAA,CAACL,GAAG;MACFe,OAAO,EAAC,MAAM;MACdC,cAAc,EAAC,QAAQ;MACvBC,UAAU,EAAC,QAAQ;MACnBJ,SAAS,EAAEA,SAAU;MAAAC,QAAA,eAErBT,OAAA,CAACF,UAAU;QAACsB,KAAK,EAAC,gBAAgB;QAACC,OAAO,EAAC,OAAO;QAAAZ,QAAA,EAC/CF;MAAY;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAEV;EAEA,oBAAOhB,OAAA,CAAAE,SAAA;IAAAO,QAAA,EAAGA;EAAQ,gBAAG,CAAC;AACxB,CAAC;AAACa,EAAA,GA7CInB,YAAyC;AA+C/C,eAAeA,YAAY;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}